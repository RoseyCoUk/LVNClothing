/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Products
         * @description Returns list of Products available in the Printful
         */
        get: operations["getProducts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/variant/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Variant
         * @description Returns information about a specific Variant and its Product
         */
        get: operations["getVariantById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Product
         * @description Returns information about a specific product and a list of variants for this product.
         */
        get: operations["getProductById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/{id}/sizes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Product Size Guide
         * @description Returns information about the size guide for a specific product.
         */
        get: operations["getProductSizeGuideById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Categories
         * @description Returns list of Catalog Categories available in the Printful
         */
        get: operations["getCategories"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Category
         * @description Returns information about a specific category.
         */
        get: operations["getCategoryById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Sync Products
         * @description Returns a list of Sync Product objects from your custom Printful store.
         */
        get: operations["getSyncProducts"];
        put?: never;
        /**
         * Create a new Sync Product
         * @description Creates a new Sync Product together with its Sync Variants ([See examples](#tag/Products-API/operation/createSyncProduct)).
         */
        post: operations["createSyncProduct"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a Sync Product
         * @description Get information about a single Sync Product and its Sync Variants.
         */
        get: operations["getSyncProductById"];
        /**
         * Modify a Sync Product
         * @description Modifies an existing Sync Product with its Sync Variants.
         *
         *     Please note that in the request body you only need to specify the fields that need to be changed. Furthermore, if you want to update existing sync variants,
         *     then in the sync variants array you must specify the IDs of all existing sync variants. All omitted existing sync variants will be deleted. All new sync
         *     variants without an ID will be created. See examples for more insights.
         *
         *     **Rate limiting:** Up to 10 requests per 60 seconds. A 60 seconds lockout is applied if request count is exceeded.
         *
         *     [See examples](#tag/Examples/Products-API-examples/Modify-a-Sync-Product)
         *
         */
        put: operations["updateSyncProduct"];
        post?: never;
        /**
         * Delete a Sync Product
         * @description Deletes a Sync Product with all of its Sync Variants
         */
        delete: operations["deleteSyncProduct"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/variants/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a Sync Variant
         * @description Get information about a single Sync Variant.
         */
        get: operations["getSyncVariantById"];
        /**
         * Modify a Sync Variant
         * @description Modifies an existing Sync Variant.
         *
         *     Please note that in the request body you only need to specify the fields that need to be changed. See examples for more insights.
         *
         *     [See examples](#tag/Examples/Products-API-examples/Modify-a-Sync-Variant)
         *
         */
        put: operations["updateSyncVariant"];
        post?: never;
        /**
         * Delete a Sync Variant
         * @description Deletes a single Sync Variant.
         */
        delete: operations["deleteSyncVariant"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/products/{id}/variants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new Sync Variant
         * @description Creates a new Sync Variant for an existing Sync Product ([See examples](#tag/Examples/Products-API-examples/Create-a-new-Sync-Variant)).
         */
        post: operations["createSyncVariant"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/product-templates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get product template list
         * @description Returns a list of templates.
         */
        get: operations["getProductTemplates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/product-templates/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get product template
         * @description Get information about a single product template
         */
        get: operations["getProductTemplateById"];
        put?: never;
        post?: never;
        /**
         * Delete product template
         * @description Delete product template by ID or External Product ID
         */
        delete: operations["deleteProductTemplate"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get list of orders
         * @description Returns list of order objects from your store
         */
        get: operations["getOrders"];
        put?: never;
        /**
         * Create a new order
         * @description Creates a new order and optionally submits it for fulfillment ([See examples](#tag/Examples/Orders-API-examples))
         */
        post: operations["createOrder"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get order data
         * @description Returns order data by ID or External ID.
         */
        get: operations["getOrderById"];
        /**
         * Update order data
         * @description  Updates unsubmitted order and optionally submits it for the fulfillment.
         *
         *      Note that you need to post only the fields that need to be changed, not all required fields.
         *
         *      If items array is given in the update data, the items will be:
         *
         *      a) updated, if the update data contains the item id or external_id parameter that alreay exists
         *
         *      b) deleted, if the request doesn't contain the item with previously existing id
         *
         *      c) created as new if the id is not given or does not already exist
         */
        put: operations["updateOrderById"];
        post?: never;
        /**
         * Cancel an order
         * @description Cancels pending order or draft. Charged amount is returned to the store owner's credit card.
         */
        delete: operations["cancelOrderById"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/{id}/confirm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Confirm draft for fulfillment
         * @description Approves for fulfillment an order that was saved as a draft. Store owner's credit card is charged when the order is submitted for fulfillment.
         */
        post: operations["confirmOrderById"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/estimate-costs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Estimate order costs
         * @description Calculates the estimated order costs including item costs, print costs (back prints, inside labels etc.), shipping and taxes
         */
        post: operations["estimateOrderCosts"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/files": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add a new file
         * @description Adds a new File to the library by providing URL of the file.
         *
         *     If a file with identical URL already exists, then the original file is returned. If a file does not exist, a new file is created.
         *
         *     [See examples](#tag/Examples/File-Library-API-examples/Add-a-new-file)
         *
         */
        post: operations["addFile"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/files/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get file
         * @description Returns information about the given file.
         */
        get: operations["getFile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/files/thread-colors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Return available thread colors from provided image URL
         * @description Returns colors in hexadecimal format.
         *
         *     Returned thread colors are matched as closely as possible to provided image colors.
         *
         *     [See examples](#tag/Examples/File-Library-API-examples/Suggest-thread-colors)
         *
         */
        post: operations["threadColors"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sync/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get list of Sync Products
         * @description Returns list of Sync Product objects from your store.
         */
        get: operations["getStoreSyncProducts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sync/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a Sync Product
         * @description Get information about a single Sync Product and its Sync Variants
         */
        get: operations["getStoreSyncProductById"];
        put?: never;
        post?: never;
        /**
         * Delete a Sync Product
         * @description Deletes a Sync Product with all of its Sync Variants
         */
        delete: operations["deleteStoreSyncProduct"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sync/variant/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a Sync Variant
         * @description Get information about a single Sync Variant
         */
        get: operations["getStoreSyncVariantById"];
        /**
         * Modify a Sync Variant
         * @description Modifies an existing Sync Variant.
         *
         *     Please note that in the request body you only need to specify the fields that need to be changed. See examples for more insights.
         *
         *      **Rate limiting:** Up to 10 requests per 60 seconds. A 60 seconds lockout is applied if request count is exceeded.
         *
         *     [See examples](#tag/Examples/Ecommerce-Platform-Sync-API-examples/Modify-a-Sync-Variant)
         *
         */
        put: operations["updateStoreSyncVariant"];
        post?: never;
        /**
         * Delete a Sync Variant
         * @description Deletes configuraton information (`variant_id`, print files and options) and disables automatic order importing for this Sync Variant.
         */
        delete: operations["deleteStoreSyncVariant"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Calculate shipping rates
         * @description Returns available shipping options and rates for the given list of products.
         */
        post: operations["calculateShippingRates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/countries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve country list
         * @description Returns list of countries and states that are accepted by the Printful.
         */
        get: operations["getCountries"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/countries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a list of countries for tax calculation
         * @description Retrieve state list that requires sales tax calculation
         */
        get: operations["getTaxCountries"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Calculate tax rate
         * @deprecated
         * @description Calculates sales tax rate for given address if required.
         *
         *     <div class="alert alert-info">
         *       ⚠️ <strong>Important – <tt>/tax/rates</tt> endpoint sunset</strong>
         *       <p>Since May 2023, the POST <tt>/tax/rates</tt> endpoint is no longer maintained and may return inaccurate results.</p>
         *       <p>On <strong>July 29, 2025</strong>, we started the sunset process. The rate limit is being reduced by 10 RPM each week (starting with 60) until it reaches 0 on <strong>September 8, 2025</strong>, at which point the endpoint will be removed entirely.</p>
         *       <p>There is no replacement endpoint in the Printful API for retrieving standalone tax rates. For accurate tax information, please use official government sources or external tax calculation providers.</p>
         *       <p>If you require the total order cost including taxes, use the order creation or estimation endpoints.</p>
         *     </div>
         *
         */
        post: operations["calculateTaxRates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/store/packing-slip": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Change packing slip
         * @description Modifies packing slip information of the currently authorized Printful store.
         */
        post: operations["changePackingSlip"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stores": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get basic information about stores
         * @description Get basic information about stores depending on the token access level
         */
        get: operations["getStores"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stores/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get basic information about a store
         * @description Get basic information about a store based on provided ID
         */
        get: operations["getStore"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mockup-generator/create-task/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a mockup generation task
         * @description Creates an asynchronous mockup generation task.
         *     Generation result can be retrieved using mockup generation task retrieval endpoint.<br>
         *     **Rate limiting**: Up to 10 requests per 60 seconds for established stores;
         *     2 requests per 60 seconds for new stores. Currently available rate is returned in response headers.
         *     A 60 seconds lockout is applied if request count is exceeded. We also limit the number of files that may
         *     be generated to 20,000 files per account in a 24-hour period.
         *
         */
        post: operations["createGeneratorTask"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mockup-generator/printfiles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve product variant printfiles
         * @description List of printfiles available for products variants. Printfile indicates what file resolution should be used to create a mockup or submit an order.
         *
         *     <div class="alert alert-info">
         *     This endpoint uses DTG as a default printing technique for products
         *     with more than one technique available. For products with DTG and more
         *     techniques available please specify the correct technique in query by using
         *     the `technique` parameter. For more information read the <a href="#tag/Examples/Mockup-Generator-API-examples">examples</a>.
         *     </div>
         *
         */
        get: operations["getPrintfiles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mockup-generator/task": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Mockup generation task result
         * @description Returns asynchronous mockup generation task result. If generation task is completed, it will contain a list of generated mockups.
         */
        get: operations["getTask"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mockup-generator/templates/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Layout templates
         * @description Retrieve list of templates that can be used for client-side positioning.
         *
         *     <div class="alert alert-info">
         *     This endpoint uses DTG as a default printing technique for product layouts
         *     with more than one technique available. For products with DTG and more
         *     techniques available please specify the correct technique in query by using
         *     the `technique` parameter. For more information read the <a href="#tag/Examples/Mockup-Generator-API-examples">examples</a>.
         *     </div>
         *
         */
        get: operations["getTemplates"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/warehouse/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a list of your warehouse products
         * @description Returns a list of warehouse products from your store
         *
         *     <div class="alert alert-info">
         *       The response for this endpoint was documented as paginated, although it was not paginated. The behavior will be
         *       fixed and the paginated result will be set as the default. Currently to get paginated results please send
         *       <code>true</code>or <code>1</code> in <code>X-PF-Force-Pagination</code> header.
         *     </div>
         *
         */
        get: operations["getWarehouseProducts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/warehouse/products/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get warehouse product data
         * @description Returns warehouse product data by ID
         */
        get: operations["getWarehouseProduct"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/approval-sheets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a list of approval sheets
         * @description Retrieve a list of approval sheets confirming suggested changes to files of on hold orders.
         */
        get: operations["getApprovalSheets"];
        put?: never;
        /**
         * Approve a design
         * @description Uses the confirm hash of an approval sheet to approve a design and remove the hold on an order
         */
        post: operations["approveDesign"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/approval-sheets/changes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Submit changes to an approval sheet
         * @description Use this to submit alternative changes to a design that has an approval sheet
         */
        post: operations["submitApprovalSheetChanges"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/webhooks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get webhook configuration
         * @description Returns configured webhook URL and list of webhook event types enabled for the store
         */
        get: operations["getWebhooks"];
        put?: never;
        /**
         * Set up webhook configuration
         * @description Use this endpoint to enable a webhook URL for a store and select webhook event types that will be sent to this URL.
         *
         *      Note that only one webhook URL can be active for a store, so calling this method disables all existing webhook configuration.
         *
         *      Setting up the [Stock updated](#operation/stockUpdated) webhook requires passing IDs for products that need to be monitored for changes. Stock update webhook will only include information for specified products. These product IDs need to be set up using the params property.
         */
        post: operations["createWebhook"];
        /**
         * Disable webhook support
         * @description Removes the webhook URL and all event types from the store.
         */
        delete: operations["disableWebhook"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/oauth/scopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get scopes for token
         * @description Returns a list of scopes associated with the token
         */
        get: operations["getScopes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get statistics
         * @description Returns statistics for specified report types.
         *
         *     You need to specify the report types you want to retrieve in the `report_types` query parameter as a comma-separated list,
         *     e.g. `report_types=sales_and_costs,profit`.
         *
         *     **Note**: You cannot get statistics for a period longer than 6 months.
         *
         *     #### Example
         *
         *     To get statistics in the default currency of a store for `sales_and_costs` and `profit` reports for August 2022, you can use the
         *     following
         *     URL: https://api.printful.com/reports/statistics?report_types=sales_and_costs,profit&date_from=2022-08-01&date_to=2022-08-31.
         *
         *     ### Report types
         *
         *     Currently, the following report types are available:
         *
         *     | Report type                | Description                                              |
         *     |----------------------------|----------------------------------------------------------|
         *     | `sales_and_costs`          | Detailed information on sales and costs grouped by date. |
         *     | `sales_and_costs_summary`  | Short information on sales and costs grouped by date.    |
         *     | `printful_costs`           | Amount paid to Printful for fulfillment and shipping.    |
         *     | `profit`                   | Profit in the specified period.                          |
         *     | `total_paid_orders`        | The number of paid orders in the specified period.       |
         *     | `costs_by_amount`          | Information on costs by amount grouped by date.          |
         *     | `costs_by_product`         | Information on costs grouped by product.                 |
         *     | `costs_by_variant`         | Information on costs grouped by variant.                 |
         *     | `average_fulfillment_time` | Average time it took Printful to fulfill your orders.    |
         *
         *     The response structure for the specific reports is documented in the response schema (`result.store_statistics.[reportName]`).
         *
         */
        get: operations["getStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Response200: {
            /**
             * @description Response status code `200`
             * @example 200
             */
            code?: number;
        };
        /** CatalogFileOption */
        CatalogFileOption: {
            /**
             * @description File option identifier. Use this to specify which option you are adding to your file in a request.
             * @example full_color
             */
            id?: string;
            /**
             * @description The type of the value property when using this option in a request.
             * @example bool
             */
            type?: string;
            /** @example Unlimited color */
            title?: string;
            /**
             * @description Additional cost this will add to the item.
             * @example 3.25
             */
            additional_price?: number;
        };
        /** FileType */
        FileType: {
            /**
             * @deprecated
             * @description Deprecated file type identifier. Please use type field instead!
             * @example default
             */
            id?: string;
            /**
             * @description File type identifier - use this to specify a file's purpose when creating an order
             * @example front
             */
            type?: string;
            /**
             * @description Display name
             * @example Front print
             */
            title?: string;
            /**
             * @description Additional price when this print file type is used
             * @example 2.22
             */
            additional_price?: string;
            /** @description Additional options available to product files */
            options?: components["schemas"]["CatalogFileOption"][];
        };
        /** OptionType */
        OptionType: {
            /**
             * @description Option identifier - use this to specify the option when creating an order
             * @example embroidery_type
             */
            id?: string;
            /**
             * @description Display name
             * @example Embroidery type
             */
            title?: string;
            /**
             * @description Data type of this option (currently only 'bool' is supported)
             * @example radio
             */
            type?: string;
            /**
             * @description Possible option values - [key, value] map
             * @example {
             *       "flat": "Flat Embroidery",
             *       "3d": "3D Puff",
             *       "both": "Partial 3D Puff"
             *     }
             */
            values?: {
                [key: string]: unknown;
            };
            /** @description Additional price when this option is used */
            additional_price?: string;
            /**
             * @description Additional price breakdown by type - [key, value] map
             * @example {
             *       "flat": "0.00",
             *       "3d": "0.00",
             *       "both": "0.00"
             *     }
             */
            additional_price_breakdown?: {
                [key: string]: unknown;
            };
        };
        /** AvailableTechnique */
        AvailableTechnique: {
            /**
             * @description The technique key to be used in the API
             * @example DTG
             */
            key?: string;
            /**
             * @description The human-readable technique name
             * @example DTG printing
             */
            display_name?: string;
            /** @description Whether the technique is the default one */
            is_default?: boolean;
        };
        /**
         * Product
         * @description Information about the Product that the Variant belongs to
         */
        Product: {
            /**
             * @description Product ID
             * @example 13
             */
            id?: number;
            /**
             * @description Main category of product
             * @example 24
             */
            main_category_id?: number;
            /**
             * @description Product type identifier
             * @example T-SHIRT
             */
            type?: string;
            /**
             * @description Product type name
             * @example T-Shirt
             */
            type_name?: string;
            /**
             * @description Product title
             * @example Unisex Staple T-Shirt | Bella + Canvas 3001
             */
            title?: string;
            /**
             * @description Brand name
             * @example Gildan
             */
            brand?: string;
            /**
             * @description Model name
             * @example 2200 Ultra Cotton Tank Top
             */
            model?: string;
            /**
             * @description URL of a sample image for this product
             * @example https://files.cdn.printful.com/products/12/product_1550594502.jpg
             */
            image?: string;
            /**
             * @description Number of available variants for this product
             * @example 30
             */
            variant_count?: number;
            /**
             * @description Currency in which prices are returned
             * @example EUR
             */
            currency?: string;
            /** @description Definitions of Print/Mockup file categories that can be attached to this product */
            files?: components["schemas"]["FileType"][];
            /** @description Definitions of additional options that are available for this product [See examples](#tag/Common/Options) */
            options?: components["schemas"]["OptionType"][];
            /**
             * @description If product is disabled in push
             * @example false
             */
            is_discontinued?: boolean;
            /**
             * @description Average number of days for order to be fulfilled
             * @example 4.3
             */
            avg_fulfillment_time?: number;
            /** @description Product description */
            description?: string;
            /** @description Available techniques */
            techniques?: components["schemas"]["AvailableTechnique"][];
            /**
             * @description The origin country for inside label
             * @example Nicaragua
             */
            origin_country?: string | null;
        };
        /** AvailabilityStatus */
        AvailabilityStatus: {
            /**
             * @description Region code
             * @example US
             */
            region?: string;
            /**
             * @description Stock status. Possible values include: 'in_stock' - available for fulfillment, 'stocked_on_demand' - available for fulfillment, 'discontinued' - permanently unavailable, 'out_of_stock' - temporarily unavailable
             * @example in_stock
             */
            status?: string;
        };
        /** Material */
        Material: {
            /**
             * @description Material name
             * @example cotton
             */
            name?: string;
            /**
             * @description Percentage of the material in the product
             * @example 100
             */
            percentage?: number;
        };
        /** Variant */
        Variant: {
            /**
             * @description Variant ID, use this to specify the product when creating orders
             * @example 100
             */
            id?: number;
            /**
             * @description ID of the product that this variant belongs to
             * @example 12
             */
            product_id?: number;
            /**
             * @description Display name
             * @example Gildan 64000 Unisex Softstyle T-Shirt with Tear Away (Black / 2XL)
             */
            name?: string;
            /**
             * @description Item size
             * @example 2XL
             */
            size?: string;
            /**
             * @description Item color
             * @example Black
             */
            color?: string;
            /**
             * @description Hexadecimal RGB color code. May not exactly reflect the real-world color
             * @example #14191e
             */
            color_code?: string;
            /** @description Secondary hexadecimal RGB color code. May not exactly reflect the real-world color */
            color_code2?: string;
            /**
             * @description URL of a preview image for this variant
             * @example https://files.cdn.printful.com/products/12/629_1517916489.jpg
             */
            image?: string;
            /**
             * @description Variant's price (can change depending on print files and optional settings)
             * @example 9.85
             */
            price?: string;
            /**
             * @description Stock availability of this variant
             * @example true
             */
            in_stock?: boolean;
            /**
             * @description Map of [region code, region name] of regions where the variant is available for fulfillment
             * @example {
             *       "US": "USA",
             *       "EU": "Europe"
             *     }
             */
            availability_regions?: {
                [key: string]: unknown;
            };
            /** @description Detailed stock status per region */
            availability_status?: components["schemas"]["AvailabilityStatus"][];
            /** @description A list of materials this Variant is composed of */
            material?: components["schemas"]["Material"][];
        };
        /** ProductInfo */
        ProductInfo: {
            product?: components["schemas"]["Product"];
            variants?: components["schemas"]["Variant"][];
        };
        /**
         * MeasurementValue
         * @description The measurement value for a specific size
         */
        MeasurementValue: {
            /**
             * @description The size with which the value is associated
             * @example S
             */
            size: string;
            /**
             * @description The single value associated with a size (whether this or `min_value` and `max_value` will be present)
             * @example 23.5
             */
            value?: string;
            /**
             * @description The lower boundary of the value range (whether this and `max_value` or `value` will be present)
             * @example 20
             */
            min_value?: string;
            /**
             * @description The upper boundary of the value range (whether this and `min_value` or `value` will be present)
             * @example 20
             */
            max_value?: string;
        };
        /**
         * Measurement
         * @description The information about a single size table measurement
         */
        Measurement: {
            /**
             * @description Measurement type
             * @example Length
             */
            type_label?: string;
            /**
             * @description The measurement unit if it's not defined on the size table level or is different
             * @example none
             */
            unit?: string;
            /** @description The measurement values for each size */
            values: components["schemas"]["MeasurementValue"][];
        };
        /**
         * SizeTable
         * @description Size table for the Product
         */
        SizeTable: {
            /**
             * @description Size table type
             * @enum {string}
             */
            type: "measure_yourself" | "product_measure" | "international";
            /**
             * @description The unit the size table values are in
             * @enum {string}
             */
            unit?: "inches" | "cm";
            /** @description The size table description (HTML) */
            description?: string;
            /** @description The URL of an image showing the measurements */
            image_url?: string;
            /** @description The description of the measurement image (HTML) */
            image_description?: string;
            /** @description The size table measurements */
            measurements: components["schemas"]["Measurement"][];
        };
        /**
         * ProductSizeGuide
         * @description Size Guide information for the Product
         */
        ProductSizeGuide: {
            /**
             * @description Product ID
             * @example 13
             */
            product_id: number;
            /**
             * @description The sizes available for the Product
             * @example [
             *       "S",
             *       "M",
             *       "L"
             *     ]
             */
            available_sizes: string[];
            /**
             * @description Size tables for the product
             * @example [
             *       {
             *         "type": "measure_yourself",
             *         "unit": "inches",
             *         "description": "<p>Measurements are provided by suppliers.<br /><br />US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p>Product measurements may vary by up to 2\\\" (5 cm).&nbsp;</p>",
             *         "image_url": "https://s3.staging.printful.com/upload/measure-yourself/6a/6a4fe322f592f2b91d5a735d7ff8d1c0_t?v=1652962720",
             *         "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Chest</h6>\\n<p dir=\\\"ltr\\\">Measure yourself around the fullest part of your chest. Keep the tape measure horizontal.</p>",
             *         "measurements": [
             *           {
             *             "type_label": "Length",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "value": "24"
             *               },
             *               {
             *                 "size": "M",
             *                 "value": "26"
             *               },
             *               {
             *                 "size": "L",
             *                 "value": "28"
             *               }
             *             ]
             *           },
             *           {
             *             "type_label": "Chest",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "min_value": "14",
             *                 "max_value": "16"
             *               },
             *               {
             *                 "size": "M",
             *                 "min_value": "18",
             *                 "max_value": "20"
             *               },
             *               {
             *                 "size": "L",
             *                 "min_value": "22",
             *                 "max_value": "24"
             *               }
             *             ]
             *           }
             *         ]
             *       },
             *       {
             *         "type": "product_measure",
             *         "unit": "inches",
             *         "description": "<p dir=\\\"ltr\\\">Measurements are provided by our suppliers. Product measurements may vary by up to 2\\\" (5 cm).</p>\\n<p dir=\\\"ltr\\\">US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p dir=\\\"ltr\\\">Pro tip! Measure one of your products at home and compare with the measurements you see in this guide.</p>",
             *         "image_url": "https://s3.staging.printful.com/upload/product-measure/85/857e7cc8b802da216e7f1a6114075a72_t?v=1652962720",
             *         "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Width</h6>\\n<p dir=\\\"ltr\\\">Place the end of the tape at the seam under the sleeve and pull the tape measure across the shirt to the seam under the opposite sleeve.</p>",
             *         "measurements": [
             *           {
             *             "type_label": "Length",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "value": "24"
             *               },
             *               {
             *                 "size": "M",
             *                 "value": "26"
             *               },
             *               {
             *                 "size": "L",
             *                 "value": "28"
             *               }
             *             ]
             *           },
             *           {
             *             "type_label": "Width",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "min_value": "14",
             *                 "max_value": "16"
             *               },
             *               {
             *                 "size": "M",
             *                 "min_value": "18",
             *                 "max_value": "20"
             *               },
             *               {
             *                 "size": "L",
             *                 "min_value": "22",
             *                 "max_value": "24"
             *               }
             *             ]
             *           }
             *         ]
             *       },
             *       {
             *         "type": "measure_yourself",
             *         "unit": "cm",
             *         "description": "<p>Measurements are provided by suppliers.<br /><br />US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p>Product measurements may vary by up to 2\\\" (5 cm).&nbsp;</p>",
             *         "image_url": "https://s3.staging.printful.com/upload/measure-yourself/6a/6a4fe322f592f2b91d5a735d7ff8d1c0_t?v=1652962720",
             *         "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Chest</h6>\\n<p dir=\\\"ltr\\\">Measure yourself around the fullest part of your chest. Keep the tape measure horizontal.</p>",
             *         "measurements": [
             *           {
             *             "type_label": "Length",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "value": "60.96"
             *               },
             *               {
             *                 "size": "M",
             *                 "value": "66.04"
             *               },
             *               {
             *                 "size": "L",
             *                 "value": "71.12"
             *               }
             *             ]
             *           },
             *           {
             *             "type_label": "Chest",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "min_value": "35.56",
             *                 "max_value": "40.64"
             *               },
             *               {
             *                 "size": "M",
             *                 "min_value": "45.72",
             *                 "max_value": "50.80"
             *               },
             *               {
             *                 "size": "L",
             *                 "min_value": "55.88",
             *                 "max_value": "60.96"
             *               }
             *             ]
             *           }
             *         ]
             *       },
             *       {
             *         "type": "product_measure",
             *         "unit": "cm",
             *         "description": "<p dir=\\\"ltr\\\">Measurements are provided by our suppliers. Product measurements may vary by up to 2\\\" (5 cm).</p>\\n<p dir=\\\"ltr\\\">US customers should order a size up as the EU sizes for this supplier correspond to a smaller size in the US market.</p>\\n<p dir=\\\"ltr\\\">Pro tip! Measure one of your products at home and compare with the measurements you see in this guide.</p>",
             *         "image_url": "https://s3.staging.printful.com/upload/product-measure/85/857e7cc8b802da216e7f1a6114075a72_t?v=1652962720",
             *         "image_description": "<h6><strong>A Length</strong></h6>\\n<p dir=\\\"ltr\\\"><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">Place the end of the tape beside the collar at the top of the tee (Highest Point Shoulder). Pull the tape measure t</span><span id=\\\"docs-internal-guid-a3ac3082-7fff-5f98-2623-3eb38d5f43a1\\\">o the bottom of the shirt.</span></p>\\n<h6>B Width</h6>\\n<p dir=\\\"ltr\\\">Place the end of the tape at the seam under the sleeve and pull the tape measure across the shirt to the seam under the opposite sleeve.</p>",
             *         "measurements": [
             *           {
             *             "type_label": "Length",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "value": "60.96"
             *               },
             *               {
             *                 "size": "M",
             *                 "value": "66.04"
             *               },
             *               {
             *                 "size": "L",
             *                 "value": "71.12"
             *               }
             *             ]
             *           },
             *           {
             *             "type_label": "Width",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "min_value": "35.56",
             *                 "max_value": "40.64"
             *               },
             *               {
             *                 "size": "M",
             *                 "min_value": "45.72",
             *                 "max_value": "50.80"
             *               },
             *               {
             *                 "size": "L",
             *                 "min_value": "55.88",
             *                 "max_value": "60.96"
             *               }
             *             ]
             *           }
             *         ]
             *       },
             *       {
             *         "type": "international",
             *         "unit": "none",
             *         "measurements": [
             *           {
             *             "type_label": "US size",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "min_value": "8",
             *                 "max_value": "10"
             *               },
             *               {
             *                 "size": "M",
             *                 "min_value": "12",
             *                 "max_value": "14"
             *               },
             *               {
             *                 "size": "L",
             *                 "min_value": "16",
             *                 "max_value": "18"
             *               }
             *             ]
             *           },
             *           {
             *             "type_label": "EU size",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "min_value": "38",
             *                 "max_value": "39"
             *               },
             *               {
             *                 "size": "M",
             *                 "min_value": "40",
             *                 "max_value": "41"
             *               },
             *               {
             *                 "size": "L",
             *                 "min_value": "42",
             *                 "max_value": "43"
             *               }
             *             ]
             *           },
             *           {
             *             "type_label": "UK size",
             *             "values": [
             *               {
             *                 "size": "S",
             *                 "min_value": "4",
             *                 "max_value": "6"
             *               },
             *               {
             *                 "size": "M",
             *                 "min_value": "8",
             *                 "max_value": "10"
             *               },
             *               {
             *                 "size": "L",
             *                 "min_value": "12",
             *                 "max_value": "14"
             *               }
             *             ]
             *           }
             *         ]
             *       }
             *     ]
             */
            size_tables: components["schemas"]["SizeTable"][];
        };
        /**
         * Category
         * @description Information about the Category
         */
        Category: {
            /**
             * @description Category ID
             * @example 24
             */
            id?: number;
            /**
             * @description ID of the parent Category. If there is no parent Category, 0 is returned.
             * @example 6
             */
            parent_id?: number;
            /**
             * @description The URL of the Category image
             * @example https://s3.staging.printful.com/upload/catalog_category/b1/b1513c82696405fcc316fc611c57f132_t?v=1646395980
             */
            image_url?: string;
            /**
             * @description The size of the category image
             * @enum {string}
             */
            size?: "small" | "medium" | "large";
            /**
             * @description Category title
             * @example T-Shirts
             */
            title?: string;
        };
        /**
         * Paging
         * @description Paging information
         */
        Paging: {
            /**
             * @description Total number of items available
             * @example 100
             */
            total: number;
            /**
             * @description Current result set page offset
             * @example 10
             */
            offset: number;
            /**
             * @description Max number of items per page
             * @example 100
             */
            limit: number;
        };
        Response200Paginated: components["schemas"]["Response200"] & {
            paging?: components["schemas"]["Paging"];
        };
        /**
         * SyncProduct
         * @description Information about the SyncProduct
         */
        SyncProduct: {
            /**
             * @description SyncProduct ID
             * @example 13
             */
            readonly id?: number;
            /**
             * @description Product ID from the Ecommerce platform
             * @example 4235234213
             */
            external_id?: string;
            /**
             * @description Product name
             * @example T-shirt
             */
            name: string;
            /**
             * @description Total number of Sync Variants belonging to this product
             * @example 10
             */
            readonly variants?: number;
            /**
             * @description Number of synced Sync Variants belonging to this product
             * @example 10
             */
            readonly synced?: number;
            /**
             * @description Thumbnail image URL. Although we do not limit thumbnail image size, we recommend to keep it reasonably small.
             * @example ​http://your-domain.com/path/to/thumbnail.png
             */
            thumbnail?: string;
            /**
             * @description Thumbnail image for the product
             * @example ​https://your-domain.com/path/to/image.png
             */
            readonly thumbnail_url?: string;
            /** @description Indicates if this Sync Product is ignored */
            is_ignored?: boolean;
        };
        /**
         * ProductVariant
         * @description Short information about the Printful Product and Variant
         */
        ProductVariant: {
            /**
             * @description Variant ID
             * @example 3001
             */
            variant_id?: number;
            /**
             * @description Product ID of this variant
             * @example 301
             */
            product_id?: number;
            /**
             * @description URL of a sample image for this variant
             * @example https://files.cdn.printful.com/products/71/5309_1581412541.jpg
             */
            image?: string;
            /**
             * @description Display name of this variant
             * @example Bella + Canvas 3001 Unisex Short Sleeve Jersey T-Shirt with Tear Away Label (White / 4XL)
             */
            name?: string;
        };
        /**
         * FileOption
         * @description File option
         */
        FileOption: {
            /**
             * @description Option id
             * @example template_type
             */
            id: string;
            /**
             * @description Option value
             * @example native
             */
            value: string;
        };
        /**
         * File
         * @description Information about the File
         */
        File: {
            /**
             * @description Role of the file
             * @example default
             */
            type?: string;
            /**
             * @description File ID
             * @example 10
             */
            readonly id?: number;
            /**
             * @description Source URL where the file is downloaded from. The use of .ai .psd and .tiff files have been depreciated, if your application uses these file types or accepts these types from users you will need to add validation.
             * @example ​https://www.example.com/files/tshirts/example.png
             */
            url: string;
            /** @description Array of additional options for this file [See examples](#tag/Common/Options) */
            options?: components["schemas"]["FileOption"][];
            /**
             * @description MD5 checksum of the file
             * @example ea44330b887dfec278dbc4626a759547
             */
            readonly hash?: string;
            /**
             * @description File name
             * @example shirt1.png
             */
            filename?: string;
            /**
             * @description MIME type of the file
             * @example image/png
             */
            readonly mime_type?: string;
            /**
             * @description Size in bytes
             * @example 45582633
             */
            readonly size?: number;
            /**
             * @description Width in pixels
             * @example 1000
             */
            readonly width?: number;
            /**
             * @description Height in pixels
             * @example 1000
             */
            readonly height?: number;
            /**
             * @description Resolution DPI.<br>**Note:** for vector files this may be indicated as only 72dpi, but it doesn't affect print quality since the vector files are resolution independent.
             * @example 300
             */
            readonly dpi?: number;
            /**
             * @description File processing status:<br>**ok** - file was processed successfuly<br>**waiting** - file is being processed<br>**failed** - file failed to be processed
             * @example ok
             */
            readonly status?: string;
            /**
             * @description File creation timestamp
             * @example 1590051937
             */
            readonly created?: number;
            /**
             * @description Small thumbnail URL
             * @example https://files.cdn.printful.com/files/ea4/ea44330b887dfec278dbc4626a759547_thumb.png
             */
            readonly thumbnail_url?: string;
            /**
             * @description Medium preview image URL
             * @example https://files.cdn.printful.com/files/ea4/ea44330b887dfec278dbc4626a759547_thumb.png
             */
            readonly preview_url?: string;
            /**
             * @description Show file in the Printfile Library (default true)
             * @example true
             */
            visible?: boolean;
            /**
             * @description Whether it is a temporary printfile.
             * @example false
             */
            readonly is_temporary?: boolean;
        };
        SyncVariantFile: components["schemas"]["File"] & {
            /**
             * @description Stitch count tier see https://help.printful.com/hc/en-us/articles/4909652626204-What-s-the-new-large-embroidery-pricing-
             * @example stitch_tier_1
             */
            readonly stitch_count_tier?: string | null;
        };
        /**
         * SyncVariantOption
         * @description Additional options for the configured product/variant
         */
        ItemOption: {
            /**
             * @description Option id
             * @example embroidery_type
             */
            id: string;
            /**
             * @description Option value
             * @example flat
             */
            value: string;
        };
        /**
         * SyncVariant
         * @description Information about the SyncVariant
         */
        SyncVariant: {
            /**
             * @description Sync Variant ID
             * @example 10
             */
            readonly id?: number;
            /**
             * @description Variant ID from the Ecommerce platform
             * @example 12312414
             */
            external_id?: string;
            /**
             * @description Sync Product ID that this variant belongs to
             * @example 71
             */
            readonly sync_product_id?: number;
            /**
             * @description Sync Variant name
             * @example Red T-Shirt
             */
            readonly name?: string;
            /**
             * @description Indicates if this Sync Variant is properly linked with Printful product
             * @example true
             */
            readonly synced?: boolean;
            /**
             * @description Printful Variant ID that this Sync Variant is synced to
             * @example 3001
             */
            variant_id?: number;
            /**
             * @description Retail price that this item is sold for
             * @example 29.99
             */
            retail_price?: string;
            /**
             * @description Currency in which prices are returned
             * @example USD
             */
            readonly currency?: string;
            /**
             * @description Indicates if this Sync Variant is ignored
             * @example true
             */
            is_ignored?: boolean;
            /**
             * @description SKU of this Sync Variant
             * @example SKU1234
             */
            sku?: string | null;
            product?: components["schemas"]["ProductVariant"] & unknown;
            /** @description Array of attached printfiles / preview images */
            files?: components["schemas"]["SyncVariantFile"][];
            /** @description Array of additional options for the configured product/variant [See examples](#tag/Common/Options) */
            options?: components["schemas"]["ItemOption"][];
            /**
             * @description Printful Variant catalog category ID
             * @example 24
             */
            readonly main_category_id?: number | null;
            /**
             * @description Warehousing product ID. If the sync variant is connected with a warehousing item, this is the ID of corresponding warehouse product.
             * @example 3002
             */
            readonly warehouse_product_id?: number | null;
            /**
             * @description Warehousing variant ID. If the sync variant is connected with a warehousing item, this is its ID.
             * @example 3002
             */
            readonly warehouse_product_variant_id?: number | null;
            /**
             * @description The size of the associated Catalog Variant
             * @example XS
             */
            readonly size?: string | null;
            /**
             * @description The color of the associated Catalog Variant
             * @example White
             */
            readonly color?: string | null;
            /**
             * @description Indicates the status of the Sync Variant.
             * @enum {string}
             */
            availability_status?: "active" | "discontinued" | "out_of_stock" | "temporary_out_of_stock";
        };
        /**
         * Product template
         * @description Information about the template
         */
        TemplateById: {
            id?: number;
            product_id?: number;
            external_product_id?: string;
            title?: string;
            available_variant_ids?: number[];
            option_data?: {
                id?: string;
                value?: string[];
            }[];
            colors?: {
                color_name?: string;
                color_codes?: unknown[];
            }[];
            sizes?: string[];
            mockup_file_url?: string;
            placements?: {
                placement?: string;
                display_name?: string;
                /** @example SUBLIMATION */
                technique_key?: string;
                /** @example Sublimation */
                technique_display_name?: string;
            }[];
            created_at?: number;
            updated_at?: number;
            placement_option_data?: {
                /** @example embroidery_chest_left */
                id?: string;
                options?: {
                    /** @example full_color */
                    id?: string;
                    /** @example true */
                    value?: unknown;
                }[];
            }[];
        };
        /**
         * Product template
         * @description Information about the template
         */
        Templates: {
            items?: components["schemas"]["TemplateById"][];
        };
        /**
         * Address
         * @description Information about the address
         */
        Address: {
            /**
             * @description Full name
             * @example John Smith
             */
            name?: string;
            /**
             * @description Company name
             * @example John Smith Inc
             */
            company?: string;
            /**
             * @description Address line 1
             * @example 19749 Dearborn St
             */
            address1?: string;
            /** @description Address line 2 */
            address2?: string;
            /**
             * @description City
             * @example Chatsworth
             */
            city?: string;
            /**
             * @description State code
             * @example CA
             */
            state_code?: string;
            /**
             * @description State name
             * @example California
             */
            state_name?: string;
            /**
             * @description Country code
             * @example US
             */
            country_code?: string;
            /**
             * @description Country name
             * @example United States
             */
            country_name?: string;
            /**
             * @description ZIP/Postal code
             * @example 91311
             */
            zip?: string;
            /**
             * @description Phone number
             * @example 2312322334
             */
            phone?: string;
            /**
             * @description Email address
             * @example firstname.secondname@domain.com
             */
            email?: string;
            /**
             * @description TAX number (`optional`, but in case of Brazil country this field becomes `required` and will be used as CPF/CNPJ number)<br> CPF format is 000.000.000-00 (14 characters);<br> CNPJ format is 00.000.000/0000-00 (18 characters).
             * @example 123.456.789-10
             */
            tax_number?: string;
        };
        /**
         * GenerationTaskFilePosition
         * @description Position
         */
        GenerationTaskFilePosition: {
            /**
             * @description Positioning area width on print area in pixels
             * @example 1800
             */
            area_width?: number | null;
            /**
             * @description Positioning area height on print area in pixels
             * @example 2400
             */
            area_height?: number | null;
            /**
             * @description Width of the image in given area in pixels
             * @example 1800
             */
            width?: number;
            /**
             * @description Height of the image in given area in pixels
             * @example 1800
             */
            height?: number;
            /**
             * @description Image top offset in given area in pixels
             * @example 300
             */
            top?: number;
            /**
             * @description Image left offset in given area in pixels
             * @example 0
             */
            left?: number;
        };
        /**
         * ItemOption
         * @description Additional option for order item
         */
        Option: {
            /**
             * @description Option ID
             * @example OptionKey
             */
            id?: string;
            /**
             * @description Option value
             * @example OptionValue
             */
            value?: string;
        };
        /**
         * Item
         * @description Information about an item in the order
         */
        Item: {
            /**
             * @description Line item ID
             * @example 1
             */
            id?: number;
            /**
             * @description Line item ID from the external system
             * @example item-1
             */
            external_id?: string;
            /**
             * @description Variant ID of the item ordered. See [Catalog API](#tag/Catalog-API)
             * @example 1
             */
            variant_id?: number;
            /**
             * @description Sync variant ID of the item ordered. [Example](#tag/Examples/Orders-API-examples/Using-a-sync-variant).
             * @example 1
             */
            sync_variant_id?: number;
            /**
             * @description External variant ID of the item ordered. [Example](#tag/Examples/Orders-API-examples/Using-sync-variant-with-external-ID).
             * @example variant-1
             */
            external_variant_id?: string;
            /**
             * @description Warehousing product variant ID of the item ordered. See Warehouse Products API
             * @example 1
             */
            warehouse_product_variant_id?: number;
            /**
             * @description The ID of a Product Template to generate the printfiles from. The `variant_id` field must be passed as well.
             *     Can't be combined with following fields: `sync_variant_id`, `external_variant_id`, `warehouse_product_variant_id`,
             *     `files`, `options`, `external_product_id`. [Examples](#tag/Examples/Orders-API-examples/Using-a-product-template).
             *
             * @example 1
             */
            product_template_id?: number;
            /**
             * @description The External Product ID associated with a Product Template to generate the printfiles from.
             *     The `variant_id` field must be passed as well. Can't be combined with following fields: `sync_variant_id`,
             *     `external_variant_id`, `warehouse_product_variant_id`, `files`, `options`, `product_template_id`. [Examples](#tag/Examples/Orders-API-examples/Using-a-product-template).
             *
             * @example template-123
             */
            external_product_id?: string;
            /**
             * @description Number of items ordered (Limited to 1000 for one item)
             * @example 1
             */
            quantity?: number;
            /**
             * @description Printful price of the item
             * @example 13.00
             */
            price?: string;
            /**
             * @description Original retail price of the item to be displayed on the packing slip
             * @example 13.00
             */
            retail_price?: string;
            /**
             * @description Display name of the item. If not given, a name from the Printful system will be displayed on the packing slip
             * @example Enhanced Matte Paper Poster 18×24
             */
            name?: string;
            product?: components["schemas"]["ProductVariant"];
            /** @description Array of attached printfiles / preview images */
            files?: (components["schemas"]["File"] & {
                position?: components["schemas"]["GenerationTaskFilePosition"] & {
                    /**
                     * @description Should limit printfile to print area
                     * @default true
                     */
                    limit_to_print_area: boolean;
                };
            })[];
            /** @description Array of additional options for this product [See examples](#tag/Common/Options) */
            options?: components["schemas"]["Option"][];
            /**
             * @description Product identifier (SKU) from the external system
             * @example null
             */
            sku?: string;
            /**
             * @description Whether the item belongs to discontinued product i.e. it's permanently unavailable
             * @example true
             */
            discontinued?: boolean;
            /**
             * @description Whether the item is out of stock i.e. temporarily unavailable
             * @example true
             */
            out_of_stock?: boolean;
        };
        /**
         * IncompleteItem
         * @description Information about an incomplete item in the order
         */
        IncompleteItem: {
            /**
             * @description Incomplete item name
             * @example Red T-Shirt
             */
            name?: string;
            /**
             * @description Incompleted item quantity
             * @example 1
             */
            quantity?: number;
            /**
             * @description Sync variant ID of the incompleted item.
             * @example 70
             */
            sync_variant_id?: number;
            /**
             * @description External variant ID of the incompleted item.
             * @example external-id
             */
            external_variant_id?: string;
            /**
             * @description External order line item id.
             * @example external-line-item-id
             */
            external_line_item_id?: string;
        };
        /**
         * OrderCosts
         * @description Order costs (Printful prices)
         */
        Costs: {
            /**
             * @description 3 letter currency code
             * @example USD
             */
            currency?: string;
            /**
             * @description Total cost of all items
             * @example 10.00
             */
            subtotal?: string;
            /**
             * @description Discount sum
             * @example 0.00
             */
            discount?: string;
            /**
             * @description Shipping costs
             * @example 5.00
             */
            shipping?: string;
            /**
             * @description Digitization costs
             * @example 0.00
             */
            digitization?: string;
            /**
             * @description Additional fee for custom product
             * @example 0.00
             */
            additional_fee?: string;
            /**
             * @description Custom product fulfillment fee
             * @example 0.00
             */
            fulfillment_fee?: string;
            /**
             * @description Retail delivery fee
             * @example 0.00
             */
            retail_delivery_fee?: string;
            /**
             * @description Sum of taxes (not included in the item price)
             * @example 0.00
             */
            tax?: string;
            /**
             * @description Sum of vat (not included in the item price)
             * @example 0.00
             */
            vat?: string;
            /**
             * @description Grand Total (subtotal-discount+tax+vat+shipping)
             * @example 15.00
             */
            total?: string;
        };
        /**
         * OrderRetailCosts
         * @description Retail costs that are to be displayed on the packing slip for international shipments. Retail costs are used only if every item in order contains the `retail_price` attribute.
         */
        RetailCosts: {
            /**
             * @description 3 letter currency code
             * @example USD
             */
            currency?: string;
            /**
             * @description Total cost of all items
             * @example 10.00
             */
            subtotal?: string | null;
            /**
             * @description Discount sum
             * @example 0.00
             */
            discount?: string | null;
            /**
             * @description Shipping costs
             * @example 5.00
             */
            shipping?: string | null;
            /**
             * @description Sum of taxes (not included in the item price)
             * @example 0.00
             */
            tax?: string | null;
            /**
             * @description Sum of VAT (not included in the item price)
             * @example 0.00
             */
            readonly vat?: string | null;
            /**
             * @description Grand Total (subtotal-discount+tax+vat+shipping)
             * @example 15.00
             */
            readonly total?: string | null;
        };
        /**
         * PricingBreakdown
         * @description Difference between order price and retail costs. Will be shown only if order is completed.
         */
        PricingBreakdown: {
            /**
             * @description Amount customer paid
             * @example 3.75
             */
            customer_pays?: string;
            /**
             * @description Printful price
             * @example 6
             */
            printful_price?: string;
            /**
             * @description Profit
             * @example -2.25
             */
            profit?: string;
            /**
             * @description Shipment tracking number
             * @example USD
             */
            currency_symbol?: string;
        };
        /**
         * OrderShipmentItem
         * @description Information about item in an order shipment
         */
        OrderShipmentItem: {
            /**
             * @description Line item ID
             * @example 1
             */
            item_id?: number;
            /**
             * @description Quantity of items in this shipment
             * @example 1
             */
            quantity?: number;
            /**
             * @description A boolean indicating that the pickup stage of this item's fulfillment has been completed
             * @example 1
             * @enum {integer}
             */
            picked?: 0 | 1;
            /**
             * @description A boolean indicting that the item has been printed, sublimated or sewed.
             * @example 1
             * @enum {integer}
             */
            printed?: 0 | 1;
        };
        /**
         * OrderShipment
         * @description Information about order shipment
         */
        Shipment: {
            /**
             * @description Shipment ID
             * @example 10
             */
            id?: number;
            /**
             * @description Carrier name
             * @example FEDEX
             */
            carrier?: string;
            /**
             * @description Delivery service name
             * @example FedEx SmartPost
             */
            service?: string;
            /**
             * @description Shipment tracking number
             * @example 0
             */
            tracking_number?: string;
            /**
             * @description Shipment tracking URL
             * @example https://www.fedex.com/fedextrack/?tracknumbers=0000000000
             */
            tracking_url?: string;
            /**
             * @description Shipping time
             * @example 1588716060
             */
            created?: number;
            /**
             * @description Ship date
             * @example 2020-05-05
             */
            ship_date?: string;
            /**
             * @description Ship time in unix timestamp
             * @example 1588716060
             */
            shipped_at?: string;
            /**
             * @description Whether this is a reshipment
             * @example false
             */
            reshipment?: boolean;
            /** @description Array of items in this shipment */
            items?: components["schemas"]["OrderShipmentItem"][];
        };
        /**
         * OrderGift
         * @description Optional gift message for the packing slip
         */
        Gift: {
            /**
             * @description Gift message title
             * @example To John
             */
            subject?: string;
            /**
             * @description Gift message text
             * @example Have a nice day
             */
            message?: string;
        };
        /**
         * OrderPackingSlip
         * @description Custom packing slip for this order. Example of a packing slip with explained fields can be found [here](#packing-slip).
         */
        PackingSlip: {
            /**
             * @description Customer service email
             * @example your-name@your-domain.com
             */
            email?: string;
            /**
             * @description Customer service phone
             * @example +371 28888888
             */
            phone?: string;
            /**
             * @description Custom packing slip message
             * @example Message on packing slip
             */
            message?: string;
            /**
             * @description URL address to a sticker we will put on a package
             * @example ​http://www.your-domain.com/packing-logo.png
             */
            logo_url?: string;
            /**
             * @description Store name override for the return address
             * @example Your store name
             */
            store_name?: string;
            /**
             * @description Your own Order ID that will be printed instead of Printful's Order ID
             * @example kkk2344lm
             */
            custom_order_id?: string;
        } | unknown | unknown | unknown | unknown;
        /**
         * Order
         * @description Information about the Order
         */
        Order: {
            /**
             * @description Order ID
             * @example 13
             */
            readonly id?: number;
            /**
             * @description Order ID from the external system
             * @example 4235234213
             */
            external_id?: string | null;
            /**
             * @description Store ID
             * @example 10
             */
            readonly store?: number;
            /**
             * @description  Order status:<br /> **draft** - order is not submitted for fulfillment<br /> **failed** - order was submitted for fulfillment but was not accepted because of an error (problem with address, printfiles, charging, etc.)<br /> **pending** - order has been submitted for fulfillment<br /> **canceled** - order is canceled<br /> **onhold** - order has encountered a problem during the fulfillment that needs to be resolved together with the Printful customer service **inprocess** - order is being fulfilled and is no longer cancellable<br /> **partial** - order is partially fulfilled (some items are shipped already, the rest will follow)<br /> **fulfilled** - all items are shipped<br />
             * @example draft
             */
            readonly status?: string;
            /**
             * @description Shipping method. Defaults to 'STANDARD'
             * @example STANDARD
             */
            shipping?: string;
            /**
             * @description Human readable shipping method name.
             * @example Flat Rate (3-4 business days after fulfillment)
             */
            readonly shipping_service_name?: string;
            /**
             * @description Time when the order was created
             * @example 1602607640
             */
            readonly created?: number;
            /**
             * @description Time when the order was updated
             * @example 1602607640
             */
            readonly updated?: number;
            recipient: components["schemas"]["Address"];
            /** @description Array of items in the order */
            items: components["schemas"]["Item"][];
            /** @description Array of branding items in the order */
            readonly branding_items?: components["schemas"]["Item"][];
            /** @description Array of incomplete items in the order */
            readonly incomplete_items?: components["schemas"]["IncompleteItem"][];
            costs?: components["schemas"]["Costs"] & unknown;
            retail_costs?: components["schemas"]["RetailCosts"];
            /** @description Difference between order price and retail costs. Will be shown only if order is completed. */
            readonly pricing_breakdown?: components["schemas"]["PricingBreakdown"][];
            /** @description Array of shipments already shipped for this order */
            readonly shipments?: components["schemas"]["Shipment"][];
            gift?: components["schemas"]["Gift"];
            packing_slip?: components["schemas"]["PackingSlip"];
        };
        /**
         * OrderEstimateCosts
         * @description Order costs (Printful prices)
         */
        OrderEstimateCosts: {
            /**
             * @description 3 letter currency code
             * @example USD
             */
            currency?: string;
            /**
             * @description Total cost of all items
             * @example 10
             */
            subtotal?: number;
            /**
             * @description Discount sum
             * @example 0
             */
            discount?: number;
            /**
             * @description Shipping costs
             * @example 5
             */
            shipping?: number;
            /**
             * @description Digitization costs
             * @example 0
             */
            digitization?: string;
            /**
             * @description Additional fee for custom product
             * @example 0
             */
            additional_fee?: number;
            /**
             * @description Custom product fulfillment fee
             * @example 0
             */
            fulfillment_fee?: number;
            /**
             * @description Sum of taxes (not included in the item price)
             * @example 0
             */
            tax?: number;
            /**
             * @description Sum of vat (not included in the item price)
             * @example 0
             */
            vat?: number;
            /**
             * @description Grand Total (subtotal-discount+tax+vat+shipping)
             * @example 15
             */
            total?: number;
        };
        /**
         * OrderEstimateRetailCosts
         * @description Retail costs that are to be displayed on the packing slip for international shipments. Retail costs are used only if every item in order contains the `retail_price` attribute.
         */
        OrderEstimateRetailCosts: {
            /**
             * @description 3 letter currency code
             * @example USD
             */
            currency?: string;
            /**
             * @description Total cost of all items
             * @example 10
             */
            subtotal?: number | null;
            /**
             * @description Discount sum
             * @example 0
             */
            discount?: number | null;
            /**
             * @description Shipping costs
             * @example 5
             */
            shipping?: number | null;
            /**
             * @description Sum of taxes (not included in the item price)
             * @example 0
             */
            tax?: number | null;
            /**
             * @description Sum of VAT (not included in the item price)
             * @example 0
             */
            readonly vat?: number | null;
            /**
             * @description Grand Total (subtotal-discount+tax+vat+shipping)
             * @example 15
             */
            readonly total?: number | null;
        };
        /**
         * AddressInfo
         * @description Recipient location information
         */
        AddressInfo: {
            /**
             * @description Address line 1
             * @example 19749 Dearborn St
             */
            address1: string;
            /**
             * @description City
             * @example Chatsworth
             */
            city: string;
            /**
             * @description Country code
             * @example US
             */
            country_code: string;
            /**
             * @description State code (optional, required for United States, Australia and Canada)
             * @example CA
             */
            state_code?: string;
            /**
             * @description ZIP or postal code (optional, required for some countries to calculate expedited shipping rates)
             * @example 91311
             */
            zip?: string;
            /** @description Phone number (optional) */
            phone?: string;
        };
        /**
         * ItemInfo
         * @description Order item information
         */
        ItemInfo: {
            /**
             * @description Catalog Variant ID of the item ordered. See [Catalog API](#tag/Catalog-API) <span style="color:red">*Required if no other IDs given</span>
             * @example 202
             */
            variant_id?: string;
            /**
             * @description External Variant ID of the item ordered. See [Ecommerce Platform Sync API](#tag/Ecommerce-Platform-Sync-API). <span style="color:red">*Required if no other IDs given</span>
             * @example 1001
             */
            external_variant_id?: string;
            /**
             * @description Warehouse product variant ID of the item ordered. See [Warehouse Products API](#tag/Warehouse-Products-API). <span style="color:red">*Required if no other IDs given</span>
             * @example 2
             */
            warehouse_product_variant_id?: string;
            /**
             * @description Number of items ordered
             * @example 10
             */
            quantity: number;
            /**
             * @description Item retail value - optional but can help to properly calculate
             * @example 2.99
             */
            value?: string;
        };
        /**
         * ShippingInfo
         * @description Shipping information
         */
        ShippingInfo: {
            /**
             * @description Shipping method ID
             * @example STANDARD
             */
            id?: string;
            /**
             * @description Shipping method name
             * @example Flat Rate (Estimated delivery: May 19–24)
             */
            name?: string;
            /**
             * @description Shipping rate
             * @example 13.60
             */
            rate?: string;
            /**
             * @description Currency code in which the rate is returned
             * @example EUR
             */
            currency?: string;
            /**
             * @description Estimated minimum delivery days. <span style="color:orange">Warning! This value may not be present in response.</span>
             * @example 4
             */
            minDeliveryDays?: number;
            /**
             * @description Estimated maximum delivery days. <span style="color:orange">Warning! This value may not be present in response.</span>
             * @example 7
             */
            maxDeliveryDays?: number;
            /**
             * @description Estimated minimum delivery date. <span style="color:orange">Warning! This value may not be present in response.</span>
             * @example 2022-10-17
             */
            minDeliveryDate?: number;
            /**
             * @description Estimated maximum delivery date. <span style="color:orange">Warning! This value may not be present in response.</span>
             * @example 2022-10-20
             */
            maxDeliveryDate?: number;
        };
        /** State */
        State: {
            /**
             * @description State code
             * @example ACT
             */
            code?: string;
            /**
             * @description State name
             * @example Australian Capital Territory
             */
            name?: string;
        };
        /** Country */
        Country: {
            /**
             * @description Country code
             * @example Australia
             */
            code?: string;
            /**
             * @description Country name
             * @example AU
             */
            name?: string;
            states?: components["schemas"]["State"][] | null;
            /** @example oceania */
            region?: string;
        };
        /**
         * TaxAddressInfo
         * @description Recipient address information
         */
        TaxAddressInfo: {
            /**
             * @description Country code
             * @example US
             */
            country_code: string;
            /**
             * @description State code
             * @example CA
             */
            state_code: string;
            /**
             * @description City
             * @example Chatsworth
             */
            city: string;
            /**
             * @description ZIP or postal code
             * @example 91311
             */
            zip: string;
        };
        /**
         * TaxInfo
         * @description Tax address information
         */
        TaxInfo: {
            /**
             * @description Whether sales tax is required for the given address
             * @example true
             */
            required?: boolean;
            /**
             * @description Tax rate
             * @example 0.095
             */
            rate?: number;
            /**
             * @description Whether shipping is taxable
             * @example false
             */
            shipping_taxable?: boolean;
        };
        /** @description Information about the Store */
        Store: {
            /**
             * @description Store ID
             * @example 10
             */
            id?: number;
            /**
             * @description Store type
             * @example native
             */
            type?: string;
            /**
             * @description Store name
             * @example My Store
             */
            name?: string;
        };
        StoreSummary: components["schemas"]["Store"] & Record<string, never>;
        StoreDetails: components["schemas"]["Store"] & Record<string, never>;
        /**
         * GenerationTaskFile
         * @description Placement and file mapping to be generated.
         */
        GenerationTaskFile: {
            /**
             * @description Placement identifier (front, back, etc.).
             * @example front
             */
            placement?: string;
            /**
             * @description Public URL where your file is stored.
             * @example ​http://your-site/path-to-front-printfile.jpg
             */
            image_url?: string;
            position?: components["schemas"]["GenerationTaskFilePosition"];
            /** @description Array of additional options for this file [See examples](#tag/Common/Options) */
            options?: components["schemas"]["FileOption"][];
        };
        /**
         * GenerationTaskExtraMockup
         * @description Generation task extra mockup
         */
        GenerationTaskExtraMockup: {
            /** @description Display name of the extra mockup. */
            title?: string;
            /**
             * @description Temporary URL of the mockup.
             * @example ​https://url-to/extra-mockup.png
             */
            url?: string;
            /** @description Style option name */
            option?: string;
            /** @description Style option group name */
            option_group?: string;
        };
        /**
         * GenerationTaskMockup
         * @description Generation task mockup.
         */
        GenerationTaskMockup: {
            /**
             * @description Placement identifier.
             * @example front
             */
            placement?: string;
            /**
             * @description This is a name that can be displayed to end customers.
             * @example Front Print
             */
            display_name?: string;
            /**
             * @description List of variant ids this mockup is used for. One mockup can be used for multiple variants.
             * @example [
             *       4011,
             *       4012,
             *       4013
             *     ]
             */
            variant_ids?: number[];
            /** @description Optional extra mockups. */
            extra?: components["schemas"]["GenerationTaskExtraMockup"][];
        };
        /**
         * GenerationTaskTemplateFile
         * @description Generated File placements and URLs.
         */
        GenerationTaskTemplateFile: {
            /**
             * @description List of variant IDs associated with printfiles.
             * @example [
             *       4012,
             *       4013,
             *       4014,
             *       4017,
             *       4018,
             *       4019
             *     ]
             */
            variant_ids?: number[];
            /**
             * @description Placement identifier (front, back, etc.).
             * @example front
             */
            placement?: string;
            /**
             * @description Public URL where your file is stored.
             * @example ​https://url-to/printfile.png
             */
            url?: string;
        };
        /**
         * GenerationTask
         * @description GenerationTask
         */
        GenerationTask: {
            /**
             * @description Task identifier you will use to retrieve generated mockups.
             * @example 123456
             */
            task_key?: string;
            /**
             * @description Status of the generation task.
             * @example completed
             * @enum {string}
             */
            status?: "pending" | "completed" | "failed";
            /** @description If task has failed, reason will be provided here. */
            error?: string;
            /** @description If task is completed, list of mockups will be provided here. */
            mockups?: components["schemas"]["GenerationTaskMockup"][];
            /** @description If task is completed, list of printfiles will be provided here. */
            printfiles?: components["schemas"]["GenerationTaskTemplateFile"][];
        };
        /**
         * Printfile
         * @description Printfile
         */
        Printfile: {
            /**
             * @description Unique printfile identifier.
             * @example 1
             */
            printfile_id?: number;
            /**
             * @description Width in pixels.
             * @example 1800
             */
            width?: number;
            /**
             * @description Height in pixels.
             * @example 2400
             */
            height?: number;
            /**
             * @description Resulting DPI for given width and height.
             * @example 150
             */
            dpi?: number;
            /**
             * @description Indicates if printfile will be used in cover or fit mode. Cover mode can produce cropping if side ratio does not match printfile.
             * @example fit
             * @enum {string}
             */
            fill_mode?: "cover" | "fit";
            /**
             * @description Indicates if printfile can be rotated horizontally (e.g. for posters).
             * @example false
             */
            can_rotate?: boolean;
        };
        /** VariantPrintfile */
        VariantPrintfile: {
            /** @example 4012 */
            variant_id?: number;
            /**
             * @description A key-value object mapping placement identifiers to printfile IDs.
             * @example {
             *       "front": 1,
             *       "back": 1,
             *       "label_outside": 1
             *     }
             */
            placements?: Record<string, never>;
        };
        /**
         * PrintfileInfo
         * @description Printfile info
         */
        PrintfileInfo: {
            /**
             * @description Requested product id.
             * @example 71
             */
            product_id?: number;
            /**
             * @description List of available placements. Key is placement identifier, value is display name. (e.g. {embroidery_front: Front, ..}).
             * @example {
             *       "front": "Front print",
             *       "back": "Back print",
             *       "label_outside": "Outside label"
             *     }
             */
            available_placements?: Record<string, never>;
            printfiles?: components["schemas"]["Printfile"][];
            variant_printfiles?: components["schemas"]["VariantPrintfile"][];
            option_groups?: string[];
            options?: string[];
        };
        /**
         * TemplateVariantMappingItem
         * @description Template variant mapping item
         */
        TemplateVariantMappingItem: {
            /**
             * @description Placement ID.
             * @example front
             */
            placement?: string;
            /**
             * @description Corresponding template id which should be used for this variant and placement combination.
             * @example 1
             */
            template_id?: number;
        };
        /**
         * TemplateVariantMapping
         * @description Template variant mapping
         */
        TemplateVariantMapping: {
            /**
             * @description Product variant ID.
             * @example 1
             */
            variant_id?: number;
            /** @description Array of Template Variant Mapping items */
            templates?: components["schemas"]["TemplateVariantMappingItem"][];
        };
        /**
         * Template
         * @description Template variant mapping
         */
        Template: {
            /**
             * @description Template ID.
             * @example 919
             */
            template_id?: number;
            /**
             * @description Main template image URL.
             * @example https://www.printful.com/files/generator/40/11oz_template.png
             */
            image_url?: string;
            /**
             * @description Background image URL (optional).
             * @example null
             */
            background_url?: string | null;
            /**
             * @description HEX color code that should be used as a background color.
             * @example null
             */
            background_color?: number | null;
            /**
             * @description Printfile ID that should be generated for this template. See [printfile API endpoint](#operation/getPrintfiles) for list of Printfiles.
             * @example 43
             */
            printfile_id?: number;
            /**
             * @description Width of the whole template in pixels.
             * @example 560
             */
            template_width?: number;
            /**
             * @description Height of the whole template in pixels.
             * @example 295
             */
            template_height?: number;
            /**
             * @description Print area width (image is positioned in this area).
             * @example 520
             */
            print_area_width?: number;
            /**
             * @description Print area height (image is positioned in this area).
             * @example 202
             */
            print_area_height?: number;
            /**
             * @description Print area top offset (offset in template).
             * @example 18
             */
            print_area_top?: number;
            /**
             * @description Print area left offset (offset in template).
             * @example 20
             */
            print_area_left?: number;
            /**
             * @description Should the main template image (image_url) be used as an overlay or as a background.
             * @example true
             */
            is_template_on_front?: boolean;
            /**
             * @description Wall art product orientation. Possible values: horizontal, vertical, any
             * @example any
             * @enum {string}
             */
            orientation?: "horizontal" | "vertical" | "any";
        };
        /**
         * TemplatePlacementConflict
         * @description Template placement conflict
         */
        TemplatePlacementConflict: {
            /**
             * @description Placement ID
             * @example label_outside
             */
            placement?: string;
            /**
             * @description List Placement IDs that are conflicting with given placement
             * @example [
             *       "back",
             *       "label_inside"
             *     ]
             */
            conflicts?: string[];
        };
        /**
         * ProductTemplate
         * @description Product Template
         */
        ProductTemplate: {
            /**
             * @description Resource version. If this changes, resources (positions, images, etc.) should be re-cached.
             * @example 1
             */
            version?: number;
            /**
             * @description Recommended minimum DPI for given product.
             * @example 300
             */
            min_dpi?: number;
            /** @description List of product variants mapped to templates. From this information you can determine which template should be used for a variant. */
            variant_mapping?: components["schemas"]["TemplateVariantMapping"][];
            /** @description List of templates. Use variant_mapping to determine which template corresponds to which product variant. */
            templates?: components["schemas"]["Template"][];
            /** @description List of conflicting placements. Used to determine which placements can be used together. */
            conflicting_placements?: components["schemas"]["TemplatePlacementConflict"][];
        };
        /** WarehouseStockLocation */
        WarehouseStockLocation: {
            /**
             * @description Name of the warehouse facility
             * @example Charlotte Steele Point, United States
             */
            facility?: string;
            /**
             * @description Total quantity of product variant in our stock
             * @example 10
             */
            stocked?: number;
            /**
             * @description Available quantity of product variant in our stock
             * @example 10
             */
            available?: number;
        };
        /**
         * WarehouseProductVariant
         * @description Warehouse product variant data
         */
        WarehouseProductVariant: {
            /**
             * @description Product variant ID
             * @example 12
             */
            id?: number;
            /**
             * @description Name of product variant
             * @example SomeName
             */
            name?: string;
            /**
             * @description SKU of product variant
             * @example some-sku-12
             */
            sku?: string;
            /**
             * @description Image URL of product variant
             * @example url.to/image/variant.png
             */
            image_url?: string;
            /**
             * Format: float
             * @description Retail price of product variant
             * @example 1.1
             */
            retail_price?: number;
            /**
             * @description Total available quantity of product variant in our stock
             * @example 10
             */
            quantity?: number;
            /**
             * Format: float
             * @description Length of product variant
             * @example 3.21
             */
            length?: number;
            /**
             * Format: float
             * @description Width of product variant
             * @example 2.13
             */
            width?: number;
            /**
             * Format: float
             * @description Height of product variant
             * @example 3.11
             */
            height?: number;
            /**
             * Format: float
             * @description Weight of product variant
             * @example 1.11
             */
            weight?: number;
            /** @description Product variant quantities in the warehouse stock */
            stock_locations?: components["schemas"]["WarehouseStockLocation"][];
        };
        /**
         * WarehouseProduct
         * @description Warehouse product data
         */
        WarehouseProduct: {
            /**
             * @description Product ID
             * @example 12
             */
            id?: number;
            /**
             * @description Product name
             * @example Some product name
             */
            name?: string;
            /**
             * @description Product status:
             *
             *      **created** - product request created,
             *
             *      **active** - product request approved
             *
             *      **suspended** - product suspended
             *
             *      **declined** - product request declined
             *
             *      **draft** - product created as a draft
             * @example draft
             * @enum {string}
             */
            status?: "created" | "active" | "suspended" | "declined" | "draft";
            /**
             * @description Currency
             * @example USD
             */
            currency?: string;
            /**
             * @description Image URL of product
             * @example url.to/your/image/location.png
             */
            image_url?: string;
            /**
             * @description Retail price of product
             * @example 12.99
             */
            retail_price?: number;
            /** @description Array of product variants */
            variants?: components["schemas"]["WarehouseProductVariant"][];
        };
        /**
         * ApprovalSheet
         * @description Approval sheet
         */
        ApprovalSheet: {
            /** @example 2 */
            id?: number;
            /**
             * @example waiting_for_action
             * @enum {string}
             */
            status?: "waiting_for_action" | "approved";
            /** @example a14e51714be01f98487fcf5131727d31 */
            confirm_hash?: string;
            /** @example https://s3.staging.printful.com/upload/approval-design/ae/ae7b3d3e965c238b3e5c1a4e15696f07_l */
            submitted_design?: string;
            /** @example https://s3.staging.printful.com/upload/approval-design/aa/aaf9e1c6b32cb7a2c04d2746108d4124_l */
            recommended_design?: string;
            /** @example https://www.printful.test/dashboard/order/download-approval-sheet-pdf?confirmationHash=13aa35854bfc67a85b7ce231aef2ae8 */
            approval_sheet?: string;
        };
        /** WebhookInfo */
        WebhookInfo: {
            /**
             * @description Webhook URL that will receive store's event notifications
             * @example ​https://www.example.com/printful/webhook
             */
            url?: string;
            /**
             * @description Array of enabled webhook event types
             * @example [
             *       "package_shipped",
             *       "stock_updated"
             *     ]
             */
            types?: string[];
            /** @example {
             *       "stock_updated": {
             *         "product_ids": [
             *           5,
             *           12
             *         ]
             *       }
             *     } */
            params?: {
                [key: string]: unknown;
            };
        };
        /**
         * SalesAndCostsValue
         * @description Sales and costs report
         */
        SalesAndCosts: {
            /** @description The date of the value: day in `Y-m-d` format, month in `Y-m` format or "Total" for the first element of the list which shows the total values for the whole requested period */
            date?: string;
            /** @description Order retail price data. Available only if retail price fields are properly set up on the integration's side */
            sales?: number;
            /** @description Product fulfillment, digitization, branding, shipping costs and taxes that are charged by Printful */
            fulfillment?: number;
            /** @description The difference between Sales and Fulfillment. If retail price data is not available, profit might be negative */
            profit?: number;
            /** @description Any retail price discounts set up on the integration's side */
            sales_discount?: number;
            /** @description Any fulfillment discounts (such as the monthly discount) set up on Printful's side */
            fulfillment_discount?: number;
            /** @description The retail shipping price that was paid by the buyer */
            sales_shipping?: number;
            /** @description Shipping costs that were charged by Printful */
            fulfillment_shipping?: number;
        }[];
        /**
         * SalesAndCostsSummaryValue
         * @description Sales and costs summary report
         */
        SalesAndCostsSummary: {
            /** @description The date of the value: day in `Y-m-d` format, month in `Y-m` format or "Total" for the first element of the list which shows the total values for the whole requested period */
            date?: string;
            /** @description The order count in the aggregation period */
            order_count?: number;
            /** @description Product fulfillment, digitization, branding, shipping costs and taxes that are charged by Printful */
            costs?: number;
            /** @description The difference between Sales and Fulfillment. If retail price data is not available, profit might be negative */
            profit?: number;
        }[];
        /**
         * PrintfulCosts
         * @description Printful costs report
         */
        PrintfulCosts: {
            /** @description Amount paid to Printful for fulfillment and shipping. */
            value?: number;
            /** @description Relative difference from the value from the previous period. -1 means 100% decrease, 1 means 100% increase. 0 is returned if there is no change or the previous value was 0. */
            relative_difference?: number;
        };
        /**
         * Profit
         * @description Profit report
         */
        Profit: {
            /** @description The difference between Sales and Fulfillment. If retail price data is not available, profit might be negative */
            value?: number;
            /** @description Relative difference from the value from the previous period. -1 means 100% decrease, 1 means 100% increase. 0 is returned if there is no change or the previous value was 0. */
            relative_difference?: number;
        };
        /**
         * TotalPaidOrders
         * @description Total paid orders report
         */
        TotalPaidOrders: {
            /** @description Number of unique orders for period */
            value?: number;
            /** @description Relative difference from the value from the previous period. -1 means 100% decrease, 1 means 100% increase. 0 is returned if there is no change or the previous value was 0. */
            relative_difference?: number;
        };
        /**
         * CostsByAmountValue
         * @description Costs by amount report
         */
        CostsByAmount: {
            /** @description The date of the value: day in `Y-m-d` format, month in `Y-m` format or "Total" for the first element of the list which shows the total values for the whole requested period */
            date?: string;
            /** @description Product & fulfillment costs */
            product_amount?: number;
            /** @description Embroidery digitization costs */
            digitization?: number;
            /** @description Pack-in costs */
            branding?: number;
            /** @description Tax amounts. If not applicable, it will be 0. */
            vat?: number;
            /** @description Tax amounts. If not applicable, it will be 0. */
            sales_tax?: number;
            /** @description Shipping costs that were charged by Printful */
            shipping?: number;
            /** @description Any fulfillment discounts (such as the monthly discount) set up on Printful's side */
            discount?: number;
            /** @description Summary of all costs */
            total?: number;
        }[];
        /**
         * CostsByProductValue
         * @description Costs by product report
         */
        CostsByProduct: {
            /** @description Product ID. See [Catalog API](#tag/Catalog-API). */
            product_id?: number;
            /** @description Product name. */
            product_name?: string;
            /** @description All fulfillment costs that are charged by Printful, excluding shipping. */
            fulfillment?: number;
            /** @description Order retail price data. Available only if retail price fields are properly set up on the integration's side. */
            sales?: number;
            /** @description Total quantity of items ordered from this product in the selected period. */
            quantity?: number;
        }[];
        /**
         * CostsByVariantValue
         * @description Costs by variant report
         */
        CostsByVariant: {
            /** @description Variant ID. See [Catalog API](#tag/Catalog-API). */
            variant_id?: number;
            /** @description Variant name. */
            variant_name?: string;
            /** @description Product ID. See [Catalog API](#tag/Catalog-API). */
            product_id?: number;
            /** @description All fulfillment costs that are charged by Printful, excluding shipping. */
            fulfillment?: number;
            /** @description Order retail price data. Available only if retail price fields are properly set up on the integration's side. */
            sales?: number;
            /** @description Total quantity of items ordered from this product in the selected period. */
            quantity?: number;
        }[];
        /**
         * AverageFulfillmentTime
         * @description Average fulfillment time report
         */
        AverageFulfillmentTime: {
            /** @description Average time it took Printful to fulfill your orders. */
            value?: number;
            /** @description Relative difference from the value from the previous period. -1 means 100% decrease, 1 means 100% increase. 0 is returned if there is no change or the previous value was 0. */
            relative_difference?: number;
        };
        /**
         * StoreStatistics
         * @description Statistics for a single store
         */
        StoreStatistics: {
            /** @description The ID of the store for which the statistics are returned */
            store_id?: number;
            /**
             * @description The code of the currency in which the statistics are returned
             * @example USD
             */
            currency?: string;
            sales_and_costs?: components["schemas"]["SalesAndCosts"];
            sales_and_costs_summary?: components["schemas"]["SalesAndCostsSummary"];
            printful_costs?: components["schemas"]["PrintfulCosts"];
            profit?: components["schemas"]["Profit"];
            total_paid_orders?: components["schemas"]["TotalPaidOrders"];
            costs_by_amount?: components["schemas"]["CostsByAmount"];
            costs_by_product?: components["schemas"]["CostsByProduct"];
            costs_by_variant?: components["schemas"]["CostsByVariant"];
            average_fulfillment_time?: components["schemas"]["AverageFulfillmentTime"];
        };
        /**
         * Statistics
         * @description Statistics
         */
        Statistics: {
            /** @description The statistics for each store (currently only a single store is supported). */
            store_statistics?: components["schemas"]["StoreStatistics"][];
        };
        Webhook: {
            /** @description Event type */
            type?: string;
            /**
             * @description Event time
             * @example 1622456737
             */
            created?: number;
            /**
             * @description Number of previous attempts to deliver this webhook event
             * @example 2
             */
            retries?: number;
            /**
             * @description ID of the store that the event occured to
             * @example 12
             */
            store?: number;
        };
        /** Order */
        OrderEvent: {
            id?: unknown;
            external_id?: unknown;
            store?: unknown;
            status?: unknown;
            shipping?: unknown;
            shipping_service_name?: unknown;
            created?: unknown;
            updated?: unknown;
            recipient?: unknown;
            items?: unknown;
            branding_items?: unknown;
            incomplete_items?: unknown;
            costs?: unknown;
            retail_costs?: unknown;
            pricing_breakdown?: unknown;
            shipments?: unknown;
            gift?: unknown;
            packing_slip?: unknown;
        } & components["schemas"]["Order"];
        /**
         * SyncProduct
         * @description Information about the SyncProduct
         */
        SyncProductEvent: {
            /**
             * @description SyncProduct ID
             * @example 13
             */
            id?: number;
            /**
             * @description Product ID from the Ecommerce platform
             * @example 4235234213
             */
            external_id?: string;
            /**
             * @description Product name
             * @example T-shirt
             */
            name: string;
            /**
             * @description Total number of Sync Variants belonging to this product
             * @example 10
             */
            readonly variants?: number;
            /**
             * @description Number of synced Sync Variants belonging to this product
             * @example 10
             */
            readonly synced?: number;
            /**
             * @description Thumbnail image URL. Although we do not limit thumbnail image size, we recommend to keep it reasonably small.
             * @example ​http://your-domain.com/path/to/thumbnail.png
             */
            thumbnail?: string;
            /**
             * @description Thumbnail image for the product
             * @example ​https://your-domain.com/path/to/image.png
             */
            readonly thumbnail_url?: string;
            /** @description Indicates if this Sync Product is ignored */
            is_ignored?: boolean;
        };
        /**
         * SyncProductDeleted
         * @description Information about the SyncProductDeleted
         */
        SyncProductDeleted: {
            /**
             * @description SyncProduct ID
             * @example 13
             */
            id: number;
            /**
             * @description Product ID from the Ecommerce platform
             * @example 42352342133
             */
            external_id: string;
            /**
             * @description Product name
             * @example T-shirt
             */
            name: string;
        };
        /** ApprovalSheetWebhookFile */
        ApprovalSheetWebhookFile: {
            /** @example a14e51714be01f98487fcf5131727d31 */
            confirm_hash?: string;
            /** @example https://s3.staging.printful.com/upload/approval-design/ae/ae7b3d3e965c238b3e5c1a4e15696f07_l */
            submitted_design?: string;
            /** @example https://s3.staging.printful.com/upload/approval-design/aa/aaf9e1c6b32cb7a2c04d2746108d4124_l */
            recommended_design?: string;
            /** @example https://www.printful.test/dashboard/order/download-approval-sheet-pdf?confirmationHash=13aa35854bfc67a85b7ce231aef2ae8 */
            approval_sheet?: string;
        };
    };
    responses: {
        /** @description OK */
        GetProducts: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["Product"][];
                };
            };
        };
        /** @description Unauthorized */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `401`
                     * @example 401
                     */
                    code?: number;
                    /**
                     * @description Actual error message
                     * @example Malformed Authorization header.
                     */
                    result?: string;
                    error?: {
                        /** @example BadRequest */
                        reason?: string;
                        /** @example Malformed Authorization header. */
                        message?: string;
                    };
                };
            };
        };
        /** @description OK */
        GetVariantById: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    /** VariantInfo */
                    result?: {
                        variant?: components["schemas"]["Variant"];
                        product?: components["schemas"]["Product"];
                    };
                };
            };
        };
        /** @description OK */
        GetProductById: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["ProductInfo"];
                };
            };
        };
        /** @description OK */
        GetProductSizeGuideById: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["ProductSizeGuide"];
                };
            };
        };
        /** @description Not found */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `404`
                     * @example 404
                     */
                    code?: number;
                    /**
                     * @description Actual error message
                     * @example Not found
                     */
                    result?: string;
                    error?: {
                        /** @example NotFound */
                        reason?: string;
                        /** @example Not found */
                        message?: string;
                    };
                };
            };
        };
        /** @description OK */
        GetCategories: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["Category"][];
                };
            };
        };
        /** @description OK */
        GetCategoryById: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["Category"];
                };
            };
        };
        /** @description OK */
        SyncProducts: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200Paginated"] & {
                    /** @description Array of SyncProduct */
                    result?: components["schemas"]["SyncProduct"][];
                };
            };
        };
        /** @description OK */
        SyncProduct: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["SyncProduct"];
                };
            };
        };
        /** @description Bad Request */
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `400`
                     * @example 400
                     */
                    code?: number;
                    /**
                     * @description Actual error message
                     * @example Missing required parameters
                     */
                    result?: string;
                    error?: {
                        /** @example BadRequest */
                        reason?: string;
                        /** @example Missing required parameters */
                        message?: string;
                    };
                };
            };
        };
        /** @description OK */
        SyncProductInfo: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    /** SyncProductInfo */
                    result?: {
                        sync_product?: components["schemas"]["SyncProduct"];
                        /** @description Array of Sync Variants available for the selected product */
                        sync_variants?: components["schemas"]["SyncVariant"][];
                    };
                };
            };
        };
        /** @description OK */
        SyncVariant: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `200`
                     * @example 200
                     */
                    code?: number;
                    result?: components["schemas"]["SyncVariant"];
                };
            };
        };
        /** @description OK */
        SyncVariantDeleted: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `200`
                     * @example 200
                     */
                    code?: number;
                    result?: unknown[];
                };
            };
        };
        /** @description OK */
        ProductTemplates: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["Templates"];
                    paging?: components["schemas"]["Paging"];
                };
            };
        };
        /** @description OK */
        TemplateById: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["TemplateById"];
                };
            };
        };
        /** @description OK */
        DeleteTemplate: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: {
                        /** @description Whether the deletion was successful */
                        success?: boolean;
                    };
                };
            };
        };
        /** @description OK */
        Orders: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200Paginated"] & {
                    result?: components["schemas"]["Order"][];
                };
            };
        };
        /** @description OK */
        Order: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["Order"];
                };
            };
        };
        /** @description OK */
        EstimateOrderCosts: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: {
                        costs?: components["schemas"]["OrderEstimateCosts"];
                        retail_costs?: components["schemas"]["OrderEstimateRetailCosts"];
                    };
                };
            };
        };
        /** @description OK */
        AddFile: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["File"];
                };
            };
        };
        /** @description OK */
        GetFile: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["File"];
                };
            };
        };
        /** @description OK */
        ThreadColors: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    thread_colors?: string[];
                };
            };
        };
        /** @description OK */
        SyncVariantInfo: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    /** SyncVariantInfo */
                    result?: {
                        sync_variant?: components["schemas"]["SyncVariant"];
                        sync_product?: components["schemas"]["SyncProduct"];
                    };
                };
            };
        };
        /** @description OK */
        ShippingRates: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `200`
                     * @example 200
                     */
                    code?: number;
                    result?: components["schemas"]["ShippingInfo"][];
                };
            };
        };
        /** @description OK */
        GetCountries: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["Country"][];
                };
            };
        };
        /** @description OK */
        TaxCountries: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `200`
                     * @example 200
                     */
                    code?: number;
                    result?: (components["schemas"]["Country"] & {
                        states?: {
                            /**
                             * @description Whether shipping is taxable in this state
                             * @example true
                             */
                            shipping_taxable?: boolean;
                        }[];
                    })[];
                };
            };
        };
        /** @description OK */
        TaxRates: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `200`
                     * @example 200
                     */
                    code?: number;
                    result?: components["schemas"]["TaxInfo"];
                };
            };
        };
        /** @description OK */
        PackingSlip: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `200`
                     * @example 200
                     */
                    code?: number;
                    result?: {
                        packing_slip?: components["schemas"]["PackingSlip"];
                    };
                };
            };
        };
        /** @description OK */
        Stores: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200Paginated"] & {
                    result?: components["schemas"]["StoreSummary"][];
                };
            };
        };
        /** @description Forbidden */
        Forbidden: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `403`
                     * @example 403
                     */
                    code?: number;
                    /**
                     * @description Actual error message
                     * @example This endpoint requires Oauth authentication!.
                     */
                    result?: string;
                    error?: {
                        /** @example 403 */
                        reason?: number;
                        /** @example This endpoint requires Oauth authentication!. */
                        message?: string;
                    };
                };
            };
        };
        /** @description OK */
        Store: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["StoreDetails"];
                };
            };
        };
        /** @description OK */
        GenerationTask: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["GenerationTask"];
                };
            };
        };
        /** @description OK */
        Printfiles: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["PrintfileInfo"];
                };
            };
        };
        /** @description OK */
        Templates: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["ProductTemplate"];
                };
            };
        };
        /** @description OK */
        WarehouseProducts: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    /** @description Array of WarehouseProducts */
                    result?: components["schemas"]["WarehouseProduct"][];
                    paging?: components["schemas"]["Paging"];
                };
            };
        };
        /** @description OK */
        WarehouseProduct: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["WarehouseProduct"];
                };
            };
        };
        /** @description OK */
        ApprovalSheetsResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["ApprovalSheet"][];
                };
            };
        };
        /** @description OK */
        ApprovalSheetsPostResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: {
                        /** @example Design approval submitted successfully */
                        message?: string;
                    };
                };
            };
        };
        /** @description OK */
        ApprovalSheetResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["ApprovalSheet"];
                };
            };
        };
        /** @description OK */
        WebhookInfo: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: components["schemas"]["WebhookInfo"];
                };
            };
        };
        /** @description OK */
        Scopes: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["Response200"] & {
                    result?: {
                        scopes?: {
                            /** @example orders/read */
                            scope?: string;
                            /** @example View all orders */
                            display_name?: string;
                        }[];
                    };
                };
            };
        };
        /** @description OK */
        Statistics: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /**
                     * @description Response status code `200`
                     * @example 200
                     */
                    code?: number;
                    result?: components["schemas"]["Statistics"];
                };
            };
        };
    };
    parameters: {
        /** @description A comma-separated list of Category IDs of the Products that are to be returned */
        ProductCategoryId: string;
        /** @description Variant id */
        VariantId: number;
        /** @description Product ID. */
        ProductId: number;
        /** @description A comma-separated list of measurement unit in which size tables are to be returned (`inches` or `cm`).
         *     The default value is determined based on the locale country. The inches are used for United States, Liberia
         *     and Myanmar, for other countries the unit defaults to centimeters.
         *      */
        MeasurementUnit: string;
        /** @description Category ID */
        CategoryId: number;
        /** @description Use this to specify which store you want to use (required only for account level token).
         *
         *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
         *      */
        StoreId: string;
        /** @description Parameter used to filter results by status/group of Sync Products */
        SyncStatus: "all" | "synced" | "unsynced" | "ignored" | "imported" | "discontinued" | "out_of_stock";
        /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
        SyncProductId: number | string;
        /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
        SyncVariantId: number | string;
        /** @description Result set offset */
        Offset: number;
        /** @description Number of items per page (max 100) */
        Limit: number;
        /** @description Template ID (integer) or External Product ID (if prefixed with @) */
        TemplateById: number | string;
        /** @description Filter by order status */
        Status: string;
        /** @description Automatically submit the newly created order for fulfillment (skip the Draft phase) */
        Confirm: boolean;
        /** @description Try to update existing order if an order with the specified external_id already exists */
        UpdateExisting: boolean;
        /** @description Order ID (integer) or External ID (if prefixed with @) */
        OrderId: string | number;
        /** @description File ID. */
        FileId: number;
        /** @description Product search needle */
        Search: string;
        /** @description Store ID */
        StoreInformationId: number;
        Orientation: "horizontal" | "vertical";
        Technique: string;
        /** @description Task key retrieved when creating the generation task. */
        TaskKey: string;
        /** @description Filter by partial or full product name */
        Query: string;
        /** @description Whether the pagination behavior should be forced. The response will be paginated if the value is `true` or `1`. */
        ForcePagination: boolean | number;
        /**
         * @description The confirm hash for the approval sheet you would like to approve.
         * @example a14e51714be01f98487fcf5131727d31
         */
        ConfirmHash: string;
        /** @description The beginning of the period to get the statistics from (date in `Y-m-d` format). */
        DateFrom: string;
        /** @description The end of the period to get the statistics from (date in `Y-m-d` format). */
        DateTo: string;
        /** @description The currency (3-letter code) to return the statistics in. You can also specify `display_currency` as the value to get the statistics in the account's display currency. The store currency will be used by default. */
        Currency: string;
        /** @description A comma-separated list of report types to be retrieved. */
        ReportTypes: string;
    };
    requestBodies: {
        /** @description POST request body */
        SyncProductCreate: {
            content: {
                "application/json": {
                    sync_product: components["schemas"]["SyncProduct"];
                    /** @description Information about the Sync Variants */
                    sync_variants: (unknown & components["schemas"]["SyncVariant"])[];
                };
            };
        };
        /** @description PUT request body */
        SyncProductUpdate: {
            content: {
                "application/json": {
                    sync_product?: components["schemas"]["SyncProduct"];
                    /** @description Information about the Sync Variants */
                    sync_variants?: (Record<string, never> & ({
                        /**
                         * @description Sync Variant ID. Please specify the IDs of all Sync Variants you wish to keep.
                         * @example 10
                         */
                        id?: number;
                    } | unknown | unknown) & components["schemas"]["SyncVariant"])[];
                };
            };
        };
        /** @description POST request body */
        SyncVariantUpdate: {
            content: {
                "application/json": {
                    /**
                     * @description Sync Variant ID. Please specify the IDs of all Sync Variants you wish to keep.
                     * @example 10
                     */
                    id?: number;
                } & components["schemas"]["SyncVariant"];
            };
        };
        /** @description POST request body */
        SyncVariantCreate: {
            content: {
                "application/json": unknown & components["schemas"]["SyncVariant"];
            };
        };
        /** @description POST request body */
        OrderInput: {
            content: {
                "application/json": components["schemas"]["Order"];
            };
        };
        /** @description POST request body */
        AddFile: {
            content: {
                "application/json": components["schemas"]["File"];
            };
        };
        /** @description POST request body */
        ThreadColors: {
            content: {
                "application/json": {
                    /**
                     * @description URL to file
                     * @example https://example.com/image.jpg
                     */
                    file_url?: string;
                };
            };
        };
        /** @description PUT request body */
        EcommerceSyncVariantUpdate: {
            content: {
                "application/json": {
                    /**
                     * @description Printful Variant ID that this Sync Variant is synced to
                     * @example 3001
                     */
                    variant_id?: number;
                    /**
                     * @description Retail price that this item is sold for
                     * @example 29.99
                     */
                    retail_price?: string;
                    /**
                     * @description SKU of this Sync Variant
                     * @example SKU1234
                     */
                    sku?: string | null;
                    /**
                     * @description If is set to true, indicates the Sync Variant has been marked as ignored by Printful for order imports. This also means that Printful will not handle the stock for Shopify stores that have marked this Sync Variant as ignored.
                     * @example false
                     */
                    is_ignored?: boolean;
                    /** @description Array of attached printfiles/preview images */
                    files?: components["schemas"]["File"][];
                    /** @description Array of additional options for the configured product/variant [See examples](#tag/Common/Options) */
                    options?: components["schemas"]["ItemOption"][];
                    /**
                     * @description Warehousing variant ID. If the sync variant is connected with a warehousing item, this is its ID.
                     * @example 3002
                     */
                    readonly warehouse_product_variant_id?: number | null;
                };
            };
        };
        /** @description POST request body */
        CalculateShippingRates: {
            content: {
                "application/json": {
                    recipient: components["schemas"]["AddressInfo"];
                    /** @description Array of order items */
                    items: components["schemas"]["ItemInfo"][];
                    /**
                     * @description 3 letter currency code (optional), required if the rates need to be converted to another currency instead of store default currency
                     * @example USD
                     */
                    currency?: string;
                    /**
                     * @description Locale in which shipping rate names will be returned. Available options: `en_US` (default), `es_ES`
                     * @example en_US
                     */
                    locale?: string;
                };
            };
        };
        /** @description POST request body */
        CalculateTaxRates: {
            content: {
                "application/json": {
                    recipient: components["schemas"]["TaxAddressInfo"];
                };
            };
        };
        /** @description POST request body */
        ChangePackingSlip: {
            content: {
                "application/json": components["schemas"]["PackingSlip"];
            };
        };
        /** @description POST request body */
        CreateGenerationTask: {
            content: {
                "application/json": {
                    /**
                     * @description List of variant ids you want to generate.
                     * @example [
                     *       4012,
                     *       4013,
                     *       4014,
                     *       4017,
                     *       4018,
                     *       4019
                     *     ]
                     */
                    variant_ids?: number[];
                    /**
                     * @description Generated file format. PNG will have a transparent background, JPG will have a smaller file size.
                     * @example jpg
                     * @enum {string}
                     */
                    format?: "jpg" | "png";
                    /** @description Width of the resulting mockup images (min 50, max 2000, default is 1000) */
                    width?: number;
                    /** @description Key-value list of product options (embroidery thread, stitch colors). Product options can be found in Catalog API endpoint. [See examples](#tag/Common/Options) */
                    product_options?: {
                        [key: string]: unknown;
                    };
                    /** @description List of option group names you want to generate. Product's option groups can be found in printfile API request. */
                    option_groups?: string[];
                    /** @description List of option names you want to generate. Product's options can be found in printfile API request. */
                    options?: string[];
                    files?: components["schemas"]["GenerationTaskFile"][];
                    /**
                     * @description Product template ID. Use instead of files parameter.
                     * @example 123
                     */
                    product_template_id?: number;
                };
            };
        };
        /** @description POST request body */
        ConfirmApprovalSheet: {
            content: {
                "application/json": {
                    /**
                     * @example approved
                     * @enum {string}
                     */
                    status: "approved";
                };
            };
        };
        /** @description POST request body */
        ApprovalSheetsChangeDesign: {
            content: {
                "application/json": {
                    /**
                     * @description A message to send to Printful designers. Customers should use this to describe the changes they want.
                     * @example The design needs to be aligned to the left
                     */
                    message: string;
                    /** @description An array of images to help describe the requested changes. Consider using the mockup generator to generate these images. The array is required but can be empty if you do not want to email any images. */
                    files: {
                        /**
                         * @description A url to an image, consider using the mockup generator to generate this image.
                         * @example example.com
                         */
                        url: string;
                    }[];
                };
            };
        };
        /** @description POST request body */
        CreateWebhook: {
            content: {
                "application/json": components["schemas"]["WebhookInfo"] & unknown;
            };
        };
        /** @description Package shipped. */
        PackageShipped: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `package_shipped`
                     * @example package_shipped
                     */
                    type?: string;
                    /**
                     * ShipmentInfo
                     * @description Shipment and order data
                     */
                    data?: {
                        shipment?: components["schemas"]["Shipment"];
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Package returned. */
        PackageReturned: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `package_returned`
                     * @example package_returned
                     */
                    type?: string;
                    /**
                     * ReturnInfo
                     * @description Shipment and order data
                     */
                    data?: {
                        /** @description Reason why the shipment was returned. */
                        reason?: string;
                        shipment?: components["schemas"]["Shipment"];
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Order created. */
        OrderCreated: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_created`
                     * @example order_created
                     */
                    type?: string;
                    /**
                     * CreateInfo
                     * @description Created order data
                     */
                    data?: {
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Order updated. */
        OrderUpdated: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_updated`
                     * @example order_updated
                     */
                    type?: string;
                    /**
                     * UpdateInfo
                     * @description Updated order data
                     */
                    data?: {
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Order failed. */
        OrderFailed: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_failed`
                     * @example order_failed
                     */
                    type?: string;
                    /**
                     * FailureInfo
                     * @description Failure reason and order data
                     */
                    data?: {
                        /** @description Reason why the order has failed. */
                        reason?: string;
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Order canceled. */
        OrderCanceled: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_canceled`
                     * @example order_canceled
                     */
                    type?: string;
                    /**
                     * CancelInfo
                     * @description Cancel reason and order data
                     */
                    data?: {
                        /** @description Reason why the order has been canceled. */
                        reason?: string;
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Product synced. */
        ProductSynced: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `product_synced`
                     * @example product_synced
                     */
                    type?: string;
                    /** SyncInfo */
                    data?: {
                        sync_product?: components["schemas"]["SyncProductEvent"];
                    };
                };
            };
        };
        /** @description Product updated. */
        ProductUpdated: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `product_updated`
                     * @example product_updated
                     */
                    type?: string;
                    /** SyncInfo */
                    data?: {
                        sync_product?: components["schemas"]["SyncProductEvent"];
                    };
                };
            };
        };
        /** @description Product deleted. */
        ProductDeleted: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `product_deleted`
                     * @example product_deleted
                     */
                    type?: string;
                    /** SyncInfo */
                    data?: {
                        sync_product?: components["schemas"]["SyncProductDeleted"];
                    };
                };
            };
        };
        /** @description Stock updated. */
        StockUpdated: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `stock_updated`
                     * @example stock_updated
                     */
                    type?: string;
                    /** ProductStock */
                    data?: {
                        /**
                         * @description Product ID
                         * @example 9001
                         */
                        product_id?: number;
                        /**
                         * VariantStock
                         * @description Variant stock for this product
                         */
                        variant_stock?: {
                            /** @description Variant IDs that are out of stock */
                            out?: number[];
                            /** @description Variant IDs that are discontinued */
                            discontinued?: number[];
                        };
                    };
                };
            };
        };
        /** @description Order put on hold. */
        OrderPutHold: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_put_hold`
                     * @example order_put_hold
                     */
                    type?: string;
                    /** OrderStatusChange */
                    data?: {
                        /** @description Reason why the order status was changed. */
                        reason?: string;
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Order put on hold because it needs customer approval. You will receive an approval sheet with suggested changes and a confirmation hash so you can approve the changes if you agree with them. */
        OrderHoldApproval: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_put_hold_approval`
                     * @example order_put_hold_approval
                     */
                    type?: string;
                    /** OrderRequiresApproval */
                    data?: {
                        /** @description Reason why the order was put on hold and requires approval. */
                        reason?: string;
                        approval_files?: components["schemas"]["ApprovalSheetWebhookFile"][];
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Order removed from on hold. */
        OrderRemoveHold: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_remove_hold`
                     * @example order_remove_hold
                     */
                    type?: string;
                    /** OrderStatusChange */
                    data?: {
                        /** @description Reason why the order status was changed. */
                        reason?: string;
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
        /** @description Order refunded. */
        OrderRefunded: {
            content: {
                "application/json": components["schemas"]["Webhook"] & {
                    /**
                     * @description Event type - `order_refunded`
                     * @example order_refunded
                     */
                    type?: string;
                    /**
                     * RefundInfo
                     * @description Refunded amount and order data
                     */
                    data?: {
                        /**
                         * @description Refunded amount.
                         * @example 13.50
                         */
                        amount?: string;
                        order?: components["schemas"]["OrderEvent"];
                    };
                };
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getProducts: {
        parameters: {
            query?: {
                /** @description A comma-separated list of Category IDs of the Products that are to be returned */
                category_id?: components["parameters"]["ProductCategoryId"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetProducts"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getVariantById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Variant id */
                id: components["parameters"]["VariantId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetVariantById"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getProductById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Product ID. */
                id: components["parameters"]["ProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetProductById"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getProductSizeGuideById: {
        parameters: {
            query?: {
                /** @description A comma-separated list of measurement unit in which size tables are to be returned (`inches` or `cm`).
                 *     The default value is determined based on the locale country. The inches are used for United States, Liberia
                 *     and Myanmar, for other countries the unit defaults to centimeters.
                 *      */
                unit?: components["parameters"]["MeasurementUnit"];
            };
            header?: never;
            path: {
                /** @description Product ID. */
                id: components["parameters"]["ProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetProductSizeGuideById"];
            404: components["responses"]["NotFound"];
        };
    };
    getCategories: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetCategories"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getCategoryById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Category ID */
                id: components["parameters"]["CategoryId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetCategoryById"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getSyncProducts: {
        parameters: {
            query?: {
                /** @description Parameter used to filter results by status/group of Sync Products */
                status?: components["parameters"]["SyncStatus"];
                /** @description A comma-separated list of Category IDs of the Products that are to be returned */
                category_id?: components["parameters"]["ProductCategoryId"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncProducts"];
            401: components["responses"]["Unauthorized"];
        };
    };
    createSyncProduct: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["SyncProductCreate"];
        responses: {
            200: components["responses"]["SyncProduct"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getSyncProductById: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncProductInfo"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    updateSyncProduct: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncProductId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["SyncProductUpdate"];
        responses: {
            200: components["responses"]["SyncProduct"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteSyncProduct: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncProductInfo"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getSyncVariantById: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncVariantId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncVariant"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    updateSyncVariant: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncVariantId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["SyncVariantUpdate"];
        responses: {
            200: components["responses"]["SyncVariant"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteSyncVariant: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncVariantId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncVariantDeleted"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    createSyncVariant: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncProductId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["SyncVariantCreate"];
        responses: {
            200: components["responses"]["SyncVariant"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getProductTemplates: {
        parameters: {
            query?: {
                /** @description Result set offset */
                offset?: components["parameters"]["Offset"];
                /** @description Number of items per page (max 100) */
                limit?: components["parameters"]["Limit"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["ProductTemplates"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getProductTemplateById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Template ID (integer) or External Product ID (if prefixed with @) */
                id: components["parameters"]["TemplateById"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["TemplateById"];
            401: components["responses"]["Unauthorized"];
        };
    };
    deleteProductTemplate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Template ID (integer) or External Product ID (if prefixed with @) */
                id: components["parameters"]["TemplateById"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["DeleteTemplate"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getOrders: {
        parameters: {
            query?: {
                /** @description Filter by order status */
                status?: components["parameters"]["Status"];
                /** @description Result set offset */
                offset?: components["parameters"]["Offset"];
                /** @description Number of items per page (max 100) */
                limit?: components["parameters"]["Limit"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Orders"];
            401: components["responses"]["Unauthorized"];
        };
    };
    createOrder: {
        parameters: {
            query?: {
                /** @description Automatically submit the newly created order for fulfillment (skip the Draft phase) */
                confirm?: components["parameters"]["Confirm"];
                /** @description Try to update existing order if an order with the specified external_id already exists */
                update_existing?: components["parameters"]["UpdateExisting"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["OrderInput"];
        responses: {
            200: components["responses"]["Order"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getOrderById: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Order ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["OrderId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Order"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    updateOrderById: {
        parameters: {
            query?: {
                /** @description Automatically submit the newly created order for fulfillment (skip the Draft phase) */
                confirm?: components["parameters"]["Confirm"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Order ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["OrderId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["OrderInput"];
        responses: {
            200: components["responses"]["Order"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    cancelOrderById: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Order ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["OrderId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Order"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    confirmOrderById: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Order ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["OrderId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Order"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    estimateOrderCosts: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["OrderInput"];
        responses: {
            200: components["responses"]["EstimateOrderCosts"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    addFile: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["AddFile"];
        responses: {
            200: components["responses"]["AddFile"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getFile: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description File ID. */
                id: components["parameters"]["FileId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetFile"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    threadColors: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["ThreadColors"];
        responses: {
            200: components["responses"]["ThreadColors"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getStoreSyncProducts: {
        parameters: {
            query?: {
                /** @description Product search needle */
                search?: components["parameters"]["Search"];
                /** @description Result set offset */
                offset?: components["parameters"]["Offset"];
                /** @description Number of items per page (max 100) */
                limit?: components["parameters"]["Limit"];
                /** @description Parameter used to filter results by status/group of Sync Products */
                status?: components["parameters"]["SyncStatus"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncProducts"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getStoreSyncProductById: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncProductInfo"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteStoreSyncProduct: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Product ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncProductInfo"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getStoreSyncVariantById: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncVariantId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncVariantInfo"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    updateStoreSyncVariant: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncVariantId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["EcommerceSyncVariantUpdate"];
        responses: {
            200: components["responses"]["SyncVariantInfo"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteStoreSyncVariant: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Sync Variant ID (integer) or External ID (if prefixed with @) */
                id: components["parameters"]["SyncVariantId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["SyncVariantInfo"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    calculateShippingRates: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["CalculateShippingRates"];
        responses: {
            200: components["responses"]["ShippingRates"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getCountries: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GetCountries"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getTaxCountries: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["TaxCountries"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    calculateTaxRates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["CalculateTaxRates"];
        responses: {
            200: components["responses"]["TaxRates"];
            404: components["responses"]["NotFound"];
        };
    };
    changePackingSlip: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["ChangePackingSlip"];
        responses: {
            200: components["responses"]["PackingSlip"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getStores: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Stores"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            403: components["responses"]["Forbidden"];
        };
    };
    getStore: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Store ID */
                id: components["parameters"]["StoreInformationId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Store"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            403: components["responses"]["Forbidden"];
        };
    };
    createGeneratorTask: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Product ID. */
                id: components["parameters"]["ProductId"];
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["CreateGenerationTask"];
        responses: {
            200: components["responses"]["GenerationTask"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getPrintfiles: {
        parameters: {
            query?: {
                orientation?: components["parameters"]["Orientation"];
                technique?: components["parameters"]["Technique"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Product ID. */
                id: components["parameters"]["ProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Printfiles"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getTask: {
        parameters: {
            query: {
                /** @description Task key retrieved when creating the generation task. */
                task_key: components["parameters"]["TaskKey"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["GenerationTask"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getTemplates: {
        parameters: {
            query?: {
                orientation?: components["parameters"]["Orientation"];
                technique?: components["parameters"]["Technique"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Product ID. */
                id: components["parameters"]["ProductId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Templates"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getWarehouseProducts: {
        parameters: {
            query?: {
                /** @description Filter by partial or full product name */
                query?: components["parameters"]["Query"];
                /** @description Number of items per page (max 100) */
                limit?: components["parameters"]["Limit"];
                /** @description Result set offset */
                offset?: components["parameters"]["Offset"];
            };
            header?: {
                /** @description Whether the pagination behavior should be forced. The response will be paginated if the value is `true` or `1`. */
                "X-PF-Force-Pagination"?: components["parameters"]["ForcePagination"];
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["WarehouseProducts"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getWarehouseProduct: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path: {
                /** @description Product ID */
                id: number | string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["WarehouseProduct"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    getApprovalSheets: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["ApprovalSheetsResponse"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    approveDesign: {
        parameters: {
            query: {
                /**
                 * @description The confirm hash for the approval sheet you would like to approve.
                 * @example a14e51714be01f98487fcf5131727d31
                 */
                confirm_hash: components["parameters"]["ConfirmHash"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["ConfirmApprovalSheet"];
        responses: {
            200: components["responses"]["ApprovalSheetsPostResponse"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    submitApprovalSheetChanges: {
        parameters: {
            query: {
                /**
                 * @description The confirm hash for the approval sheet you would like to approve.
                 * @example a14e51714be01f98487fcf5131727d31
                 */
                confirm_hash: components["parameters"]["ConfirmHash"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["ApprovalSheetsChangeDesign"];
        responses: {
            200: components["responses"]["ApprovalSheetResponse"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getWebhooks: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["WebhookInfo"];
            401: components["responses"]["Unauthorized"];
        };
    };
    createWebhook: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["CreateWebhook"];
        responses: {
            200: components["responses"]["WebhookInfo"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
        };
    };
    disableWebhook: {
        parameters: {
            query?: never;
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["WebhookInfo"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getScopes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Scopes"];
            401: components["responses"]["Unauthorized"];
            403: components["responses"]["Forbidden"];
        };
    };
    getStatistics: {
        parameters: {
            query: {
                /** @description The beginning of the period to get the statistics from (date in `Y-m-d` format). */
                date_from: components["parameters"]["DateFrom"];
                /** @description The end of the period to get the statistics from (date in `Y-m-d` format). */
                date_to: components["parameters"]["DateTo"];
                /** @description The currency (3-letter code) to return the statistics in. You can also specify `display_currency` as the value to get the statistics in the account's display currency. The store currency will be used by default. */
                currency?: components["parameters"]["Currency"];
                /** @description A comma-separated list of report types to be retrieved. */
                report_types: components["parameters"]["ReportTypes"];
            };
            header?: {
                /** @description Use this to specify which store you want to use (required only for account level token).
                 *
                 *     The store IDs can be retrieved with the [Get basic information about stores](#tag/Store-Information-API/operation/getStores) endpoint.
                 *      */
                "X-PF-Store-Id"?: components["parameters"]["StoreId"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["Statistics"];
            400: components["responses"]["BadRequest"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
}

// Enhanced types for the new product structure
export interface PrintfulProduct {
  id: number;
  name: string;
  description?: string;
  category: 'tshirt' | 'hoodie' | 'cap' | 'tote' | 'water-bottle' | 'mug' | 'mouse-pad';
  variants: PrintfulVariant[];
  isUnisex?: boolean;
  hasDarkLightVariants?: boolean;
  image?: string;
  brand?: string;
  model?: string;
  currency?: string;
  is_discontinued?: boolean;
  avg_fulfillment_time?: number;
  origin_country?: string | null;
}

export interface PrintfulVariant {
  id: number;
  name: string;
  color: 'dark' | 'light' | string;
  size?: 'S' | 'M' | 'L' | 'XL' | '2XL' | '3XL' | '4XL' | 'One Size';
  price: string;
  in_stock: boolean;
  printful_variant_id: number;
  color_code?: string;
  color_code2?: string;
  image?: string;
  availability_regions?: Record<string, string>;
  material?: Array<{
    name: string;
    percentage: number;
  }>;
}

export interface BundleProduct {
  id: string;
  name: string;
  description: string;
  products: BundleItem[];
  totalPrice: number;
  savings: number;
  image?: string;
}

export interface BundleItem {
  product: PrintfulProduct;
  variant: PrintfulVariant;
  quantity?: number;
}

export interface StickerAddon {
  id: string;
  name: string;
  description: string;
  price: number;
  image: string;
  printful_variant_id: number;
  availableFor: ('tshirt' | 'hoodie' | 'cap' | 'tote')[];
}
